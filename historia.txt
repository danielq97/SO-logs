**********************
Inicio de la transcripción de Windows PowerShell
Hora de inicio: 20190130090702
Nombre de usuario: DESKTOP-IA9DV28\Usuario
Usuario RunAs: DESKTOP-IA9DV28\Usuario
Nombre de la configuración: 
Máquina: DESKTOP-IA9DV28 (Microsoft Windows NT 10.0.17763.0)
Aplicación host: C:\Windows\system32\WindowsPowerShell\v1.0\PowerShell_ISE.exe
Id. de proceso: 5308
PSVersion: 5.1.17763.1
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.17763.1
BuildVersion: 10.0.17763.1
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
La transcripción ha comenzado. El archivo de salida es historia.txt
PS C:\Users\Usuario> ls


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-r---     22/01/2019  2:33 p. m.                3D Objects
d-r---     22/01/2019  2:33 p. m.                Contacts
d-r---     30/01/2019  9:02 a. m.                Desktop
d-r---     30/01/2019  8:59 a. m.                Documents
d-r---     22/01/2019  2:33 p. m.                Downloads
d-r---     22/01/2019  2:33 p. m.                Favorites
d-r---     22/01/2019  2:33 p. m.                Links
d-r---     22/01/2019  2:33 p. m.                Music
d-r---     30/01/2019  7:57 a. m.                OneDrive
d-r---     22/01/2019  2:35 p. m.                Pictures
d-r---     22/01/2019  2:33 p. m.                Saved Games
d-r---     22/01/2019  2:35 p. m.                Searches
d-r---     22/01/2019  2:33 p. m.                Videos
-a----     30/01/2019  9:07 a. m.            733 historia.txt


PS C:\Users\Usuario> get command -num alias
get : El término 'get' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable. 
Compruebe si escribió correctamente el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e 
inténtelo de nuevo.
En línea: 1 Carácter: 1
+ get command -num alias
+ ~~~
    + CategoryInfo          : ObjectNotFound: (get:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
get : El término 'get' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable. Compruebe si escribió correctamente
el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e inténtelo de nuevo.
En línea: 1 Carácter: 1
+ get command -num alias
+ ~~~
    + CategoryInfo          : ObjectNotFound: (get:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\Usuario> get command -noun alias
get : El término 'get' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable. 
Compruebe si escribió correctamente el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e 
inténtelo de nuevo.
En línea: 1 Carácter: 1
+ get command -noun alias
+ ~~~
    + CategoryInfo          : ObjectNotFound: (get:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
get : El término 'get' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable. Compruebe si escribió correctamente
el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e inténtelo de nuevo.
En línea: 1 Carácter: 1
+ get command -noun alias
+ ~~~
    + CategoryInfo          : ObjectNotFound: (get:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\Usuario> get -command -noun alias
get : El término 'get' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable. 
Compruebe si escribió correctamente el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e 
inténtelo de nuevo.
En línea: 1 Carácter: 1
+ get -command -noun alias
+ ~~~
    + CategoryInfo          : ObjectNotFound: (get:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
get : El término 'get' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable. Compruebe si escribió correctamente
el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e inténtelo de nuevo.
En línea: 1 Carácter: 1
+ get -command -noun alias
+ ~~~
    + CategoryInfo          : ObjectNotFound: (get:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\Usuario> get cmdlet -noun alias
get : El término 'get' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable. 
Compruebe si escribió correctamente el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e 
inténtelo de nuevo.
En línea: 1 Carácter: 1
+ get cmdlet -noun alias
+ ~~~
    + CategoryInfo          : ObjectNotFound: (get:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
get : El término 'get' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable. Compruebe si escribió correctamente
el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e inténtelo de nuevo.
En línea: 1 Carácter: 1
+ get cmdlet -noun alias
+ ~~~
    + CategoryInfo          : ObjectNotFound: (get:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\Usuario> get service -ComputerName localhost
get : El término 'get' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable. 
Compruebe si escribió correctamente el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e 
inténtelo de nuevo.
En línea: 1 Carácter: 1
+ get service -ComputerName localhost
+ ~~~
    + CategoryInfo          : ObjectNotFound: (get:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
get : El término 'get' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable. Compruebe si escribió correctamente
el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e inténtelo de nuevo.
En línea: 1 Carácter: 1
+ get service -ComputerName localhost
+ ~~~
    + CategoryInfo          : ObjectNotFound: (get:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\Usuario> Get-Service -ComputerName localhost

Status   Name               DisplayName
------   ----               -----------
Stopped  AJRouter           Servicio de enrutador de AllJoyn
Stopped  ALG                Servicio de puerta de enlace de niv...
Stopped  AppIDSvc           Identidad de aplicación
Running  Appinfo            Información de la aplicación
Stopped  AppMgmt            Administración de aplicaciones
Stopped  AppReadiness       Preparación de aplicaciones
Stopped  AppVClient         Microsoft App-V Client
Stopped  AppXSvc            Servicio de implementación de AppX ...
Stopped  AssignedAccessM... Servicio AssignedAccessManager
Running  AudioEndpointBu... Compilador de extremo de audio de W...
Running  Audiosrv           Audio de Windows
Stopped  AxInstSV           Instalador de ActiveX (AxInstSV)
Stopped  BcastDVRUserSer... Servicio de usuario de difusión y G...
Stopped  BDESVC             Servicio Cifrado de unidad BitLocker
Running  BFE                Motor de filtrado de base
Running  BITS               Servicio de transferencia inteligen...
Stopped  BluetoothUserSe... Servicio de soporte técnico de usua...
Running  BrokerInfrastru... Servicio de infraestructura de tare...
Stopped  BTAGService        Servicio de puerta de enlace de aud...
Running  BthAvctpSvc        Servicio AVCTP
Stopped  bthserv            Servicio de compatibilidad con Blue...
Stopped  camsvc             Servicio Administrador de funcional...
Stopped  CaptureService_... CaptureService_325bd
Running  cbdhsvc_325bd      Servicio de usuario del portapapele...
Running  CDPSvc             Servicio de plataforma de dispositi...
Running  CDPUserSvc_325bd   Servicio de usuario de plataforma d...
Stopped  CertPropSvc        Propagación de certificados
Running  ClipSVC            Servicio de licencia de cliente (Cl...
Running  COMSysApp          Aplicación del sistema COM+
Stopped  ConsentUxUserSv... ConsentUX_325bd
Running  CoreMessagingRe... CoreMessaging
Running  CryptSvc           Servicios de cifrado
Stopped  CscService         Archivos sin conexión
Running  DcomLaunch         Iniciador de procesos de servidor DCOM
Stopped  defragsvc          Optimizar unidades
Stopped  DeviceAssociati... Servicio de asociación de dispositivos
Stopped  DeviceInstall      Servicio de instalación de disposit...
Stopped  DevicePickerUse... DevicePicker_325bd
Stopped  DevicesFlowUser... DevicesFlow_325bd
Stopped  DevQueryBroker     Agente de detección en segundo plan...
Running  Dhcp               Cliente DHCP
Stopped  diagnosticshub.... Servicio Recopilador estándar del c...
Stopped  diagsvc            Diagnostic Execution Service
Running  DiagTrack          Telemetría y experiencias del usuar...
Stopped  DisplayEnhancem... Servicio de mejora de visualización
Stopped  DmEnrollmentSvc    Servicio de inscripción de administ...
Stopped  dmwappushservice   Servicio de enrutamiento de mensaje...
Running  Dnscache           Cliente DNS
Stopped  DoSvc              Optimización de entrega
Stopped  dot3svc            Configuración automática de redes c...
Running  DPS                Servicio de directivas de diagnóstico
Stopped  DsmSvc             Administrador de configuración de d...
Running  DsSvc              Servicio de uso compartido de datos
Running  DusmSvc            Uso de datos
Stopped  Eaphost            Protocolo de autenticación extensible
Stopped  EFS                Sistema de cifrado de archivos (EFS)
Stopped  embeddedmode       Modo incrustado
Stopped  EntAppSvc          Servicio de administración de aplic...
Running  EventLog           Registro de eventos de Windows
Running  EventSystem        Sistema de eventos COM+
Stopped  Fax                Fax
Stopped  fdPHost            Host de proveedor de detección de f...
Stopped  FDResPub           Publicación de recurso de detección...
Stopped  fhsvc              Servicio de historial de archivos
Running  FontCache          Servicio de caché de fuentes de Win...
Stopped  FrameServer        Servicio FrameServer de la Cámara d...
Stopped  GoogleChromeEle... Google Chrome Elevation Service
Running  gpsvc              Cliente de directiva de grupo
Stopped  GraphicsPerfSvc    GraphicsPerfSvc
Stopped  gupdate            Google Update Servicio (gupdate)
Stopped  gupdatem           Google Update Servicio (gupdatem)
Stopped  hidserv            Servicio de dispositivo de interfaz...
Stopped  icssvc             Servicio de zona con cobertura inal...
Stopped  IKEEXT             Módulos de creación de claves de IP...
Stopped  InstallService     Servicio de instalación de Microsof...
Running  iphlpsvc           Aplicación auxiliar IP
Stopped  IpxlatCfgSvc       Servicio de configuración de trasla...
Stopped  irmon              Servicio de monitor de infrarrojos
Running  KeyIso             Aislamiento de claves CNG
Stopped  KtmRm              KTMRM para DTC (Coordinador de tran...
Running  LanmanServer       Servidor
Running  LanmanWorkstation  Estación de trabajo
Stopped  lfsvc              Servicio de geolocalización
Running  LicenseManager     Servicio de administrador de licenc...
Stopped  lltdsvc            Asignador de detección de topología...
Running  lmhosts            Aplicación auxiliar de NetBIOS sobr...
Running  LSM                Administrador de sesión local
Stopped  LxpSvc             Servicio de experiencia de idioma
Stopped  MapsBroker         Administrador de mapas descargados
Stopped  MessagingServic... MessagingService_325bd
Running  mpssvc             Firewall de Windows Defender
Running  MSDTC              Coordinador de transacciones distri...
Stopped  MSiSCSI            Servicio del iniciador iSCSI de Mic...
Stopped  msiserver          Windows Installer
Stopped  NaturalAuthenti... Autenticación natural
Stopped  NcaSvc             Asistente para la conectividad de red
Running  NcbService         Agente de conexión de red
Stopped  NcdAutoSetup       Configuración automática de disposi...
Stopped  Netlogon           Net Logon
Stopped  Netman             Conexiones de red
Running  netprofm           Servicio de lista de redes
Stopped  NetSetupSvc        Servicio de configuración de red
Stopped  NetTcpPortSharing  Servicio de uso compartido de puert...
Stopped  NgcCtnrSvc         Contenedor de Microsoft Passport
Stopped  NgcSvc             Microsoft Passport
Running  NlaSvc             Reconoc. ubicación de red
Running  nsi                Servicio Interfaz de almacenamiento...
Running  OneSyncSvc_325bd   Sincronizar host_325bd
Stopped  p2pimsvc           Administrador de identidad de redes...
Stopped  p2psvc             Agrupación de red del mismo nivel
Running  PcaSvc             Servicio Asistente para la compatib...
Stopped  PeerDistSvc        BranchCache
Stopped  perceptionsimul... Servicio de simulación de percepció...
Running  PhoneSvc           Servicio telefónico
Running  PimIndexMainten... Datos de contactos_325bd
Stopped  pla                Registros y alertas de rendimiento
Running  PlugPlay           Plug and Play
Stopped  PNRPAutoReg        Servicio de publicación de nombres ...
Stopped  PNRPsvc            Protocolo de resolución de nombres ...
Stopped  PolicyAgent        Agente de directiva IPsec
Running  Power              Energía
Stopped  PrintNotify        Extensiones y notificaciones de imp...
Stopped  PrintWorkflowUs... PrintWorkflow_325bd
Running  ProfSvc            Servicio de perfil de usuario
Stopped  PushToInstall      Servicio PushToInstall de Windows
Stopped  QWAVE              Experiencia de calidad de audio y v...
Stopped  RasAuto            Administrador de conexiones automát...
Stopped  RasMan             Administrador de conexiones de acce...
Stopped  RemoteAccess       Enrutamiento y acceso remoto
Stopped  RemoteRegistry     Registro remoto
Stopped  RetailDemo         Servicio de prueba comercial
Stopped  RmSvc              Servicio de administración de radio
Running  RpcEptMapper       Asignador de extremos de RPC
Stopped  RpcLocator         Ubicador de llamada a procedimiento...
Running  RpcSs              Llamada a procedimiento remoto (RPC)
Running  SamSs              Administrador de cuentas de seguridad
Stopped  SCardSvr           Tarjeta inteligente
Stopped  ScDeviceEnum       Servicio de enumeración de disposit...
Running  Schedule           Programador de tareas
Stopped  SCPolicySvc        Directiva de extracción de tarjetas...
Stopped  SDRSVC             Copias de seguridad de Windows
Stopped  seclogon           Inicio de sesión secundario
Running  SecurityHealthS... Servicio Seguridad de Windows
Running  SEMgrSvc           Administrador de pagos y NFC/SE
Running  SENS               Servicio de notificación de eventos...
Stopped  Sense              Servicio de Protección contra amena...
Stopped  SensorDataService  Servicio de datos del sensor
Stopped  SensorService      Servicio de sensores
Stopped  SensrSvc           Servicio de supervisión de sensores
Stopped  SessionEnv         Configuración de Escritorio remoto
Stopped  SharedAccess       Conexión compartida a Internet (ICS)
Stopped  SharedRealitySvc   Servicio de datos espacial
Running  ShellHWDetection   Detección de hardware shell
Stopped  shpamsvc           Shared PC Account Manager
Stopped  smphost            SMP de Espacios de almacenamiento d...
Stopped  SmsRouter          Servicio enrutador de SMS de Micros...
Stopped  SNMPTRAP           Captura de SNMP
Stopped  spectrum           Servicio de percepción de Windows
Running  Spooler            Cola de impresión
Stopped  sppsvc             Protección de software
Running  SSDPSRV            Detección SSDP
Stopped  ssh-agent          OpenSSH Authentication Agent
Stopped  SstpSvc            Servicio de protocolo de túnel de s...
Running  StateRepository    Servicio de repositorio de estado
Stopped  StiSvc             Adquisición de imágenes de Windows ...
Running  StorSvc            Servicio de almacenamiento
Stopped  svsvc              Comprobador puntual
Stopped  swprv              Proveedor de instantáneas de softwa...
Running  SysMain            SysMain
Running  SystemEventsBroker Agente de eventos del sistema
Running  TabletInputService Servicio de Panel de escritura a ma...
Stopped  tapisrv            Telefonía
Stopped  TermService        Servicios de Escritorio remoto
Running  Themes             Temas
Stopped  TieringEngineSe... Administración de capas de almacena...
Running  TimeBrokerSvc      Agente de eventos de tiempo
Running  TokenBroker        Administrador de cuentas web
Running  TPAutoConnSvc      TP AutoConnect Service
Stopped  TPVCGateway        TP VC Gateway Service
Running  TrkWks             Cliente de seguimiento de vínculos ...
Stopped  TrustedInstaller   Instalador de módulos de Windows
Stopped  tzautoupdate       Actualizador de zona horaria automá...
Stopped  UevAgentService    Servicio de virtualización de la ex...
Stopped  UmRdpService       Redirector de puerto en modo usuari...
Running  UnistoreSvc_325bd  Almacenamiento de datos de usuarios...
Stopped  upnphost           Dispositivo host de UPnP
Running  UserDataSvc_325bd  Acceso a datos de usuarios_325bd
Running  UserManager        Administrador de usuarios
Running  UsoSvc             Update Orchestrator Service
Stopped  VacSvc             Servicio Volumetric Audio Compositor
Running  VaultSvc           Administrador de credenciales
Stopped  vds                Disco virtual
Running  VGAuthService      VMware Alias Manager and Ticket Ser...
Stopped  vmicguestinterface Interfaz de servicio invitado de Hy...
Stopped  vmicheartbeat      Servicio de latido de Hyper-V
Stopped  vmickvpexchange    Servicio de intercambio de datos de...
Stopped  vmicrdv            Servicio de virtualización de Escri...
Stopped  vmicshutdown       Servicio de cierre de invitado de H...
Stopped  vmictimesync       Servicio de sincronización de hora ...
Stopped  vmicvmsession      Servicio PowerShell Direct de Hyper-V
Stopped  vmicvss            Solicitante de instantáneas de volu...
Running  VMTools            VMware Tools
Stopped  vmvss              VMware Snapshot Provider
Running  VMware Physical... Servicio auxiliar de disco físico d...
Stopped  VSS                Instantáneas de volumen
Running  W32Time            Hora de Windows
Stopped  WaaSMedicSvc       Windows Update Medic Service
Stopped  WalletService      WalletService
Stopped  WarpJITSvc         WarpJITSvc
Stopped  wbengine           Servicio del módulo de copia de seg...
Stopped  WbioSrvc           Servicio biométrico de Windows
Running  Wcmsvc             Administrador de conexiones de Windows
Stopped  wcncsvc            Registrador de configuración de Win...
Running  WdiServiceHost     Host del servicio de diagnóstico
Running  WdiSystemHost      Host de sistema de diagnóstico
Running  WdNisSvc           Servicio de inspección de red de An...
Stopped  WebClient          Cliente web
Stopped  Wecsvc             Recopilador de eventos de Windows
Stopped  WEPHOSTSVC         Servicio host de proveedor de cifra...
Stopped  wercplsupport      Ayuda del Panel de control de Infor...
Stopped  WerSvc             Servicio Informe de errores de Windows
Stopped  WFDSConMgrSvc      Servicio de administrador de conexi...
Stopped  WiaRpc             Eventos de adquisición de imágenes ...
Running  WinDefend          Servicio de Antivirus de Windows De...
Running  WinHttpAutoProx... Servicio de detección automática de...
Running  winmgmt            Instrumental de administración de W...
Stopped  WinRM              Administración remota de Windows (W...
Stopped  wisvc              Servicio de Windows Insider
Stopped  Wlansvc            Configuración automática de WLAN
Running  wlidsvc            Ayudante para el inicio de sesión d...
Stopped  wlpasvc            Servicio de asistente para perfil l...
Stopped  WManSvc            Servicio de administración de Windows
Stopped  wmiApSrv           Adaptador de rendimiento de WMI
Stopped  WMPNetworkSvc      Servicio de uso compartido de red d...
Stopped  workfolderssvc     Carpetas de trabajo
Stopped  WpcMonSvc          Control parental
Stopped  WPDBusEnum         Servicio enumerador de dispositivos...
Running  WpnService         Servicio del sistema de notificacio...
Running  WpnUserService_... Servicio de usuario de notificacion...
Running  wscsvc             Centro de seguridad
Running  WSearch            Windows Search
Running  wuauserv           Windows Update
Stopped  WwanSvc            Configuración automática de WWAN
Stopped  XblAuthManager     Administración de autenticación de ...
Stopped  XblGameSave        Partida guardada en Xbox Live
Stopped  XboxGipSvc         Xbox Accessory Management Service
Stopped  XboxNetApiSvc      XboxNetApiSvc


PS C:\Users\Usuario> Get-Command -Noun alias

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Export-Alias                                       3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          Get-Alias                                          3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          Import-Alias                                       3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          New-Alias                                          3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          Set-Alias                                          3.1.0.0    Microsoft.PowerShell.Utility


PS C:\Users\Usuario> Get-Alias -Definition "Get-Service"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Alias           gsv -> Get-Service


PS C:\Users\Usuario> notepad.exe
PS C:\Users\Usuario> help New-Alias 

NOMBRE
    New-Alias

SINOPSIS
    Creates a new alias.


SINTAXIS
    New-Alias [-Name] <String> [-Value] <String> [-Confirm] [-Description <String>] [-Force] [-Option {None | ReadOnly | Constant | Private |
    AllScope | Unspecified}] [-PassThru] [-Scope <String>] [-WhatIf] [<CommonParameters>]


DESCRIPCIÓN
    The New-Alias cmdlet creates a new alias in the current Windows PowerShell session. Aliases created by using New-Alias are not saved after you
    exit the session or close Windows PowerShell. You can use the Export-Alias cmdlet to save your alias information to a file. You can later use
    Import-Alias to retrieve that saved alias information.


VÍNCULOS RELACIONADOS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821831
    Export-Alias
    Get-Alias
    Import-Alias
    Set-Alias

NOTAS
    Para ver los ejemplos, escriba: "get-help New-Alias -examples".
    Para obtener más información, escriba: "get-help New-Alias -detailed".
    Para obtener información técnica, escriba: "get-help New-Alias -full".
    Para obtener ayuda disponible en línea, escriba: "get-help New-Alias -online"


PS C:\Users\Usuario> help New-Alias -Full

NOMBRE
    New-Alias

SINOPSIS
    Creates a new alias.


SINTAXIS
    New-Alias [-Name] <String> [-Value] <String> [-Confirm] [-Description <String>] [-Force] [-Option {None | ReadOnly | Constant | Private |
    AllScope | Unspecified}] [-PassThru] [-Scope <String>] [-WhatIf] [<CommonParameters>]


DESCRIPCIÓN
    The New-Alias cmdlet creates a new alias in the current Windows PowerShell session. Aliases created by using New-Alias are not saved after you
    exit the session or close Windows PowerShell. You can use the Export-Alias cmdlet to save your alias information to a file. You can later use
    Import-Alias to retrieve that saved alias information.


PARÁMETROS
    -Confirm [<SwitchParameter>]
        Prompts you for confirmation before running the cmdlet.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Description <String>
        Specifies a description of the alias. You can type any string. If the description includes spaces, enclose it in quotation marks.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Force [<SwitchParameter>]
        Indicates that the cmdlet acts like Set-Alias if the alias named already exists.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Name <String>
        Specifies the new alias. You can use any alphanumeric characters in an alias, but the first character cannot be a number.

        ¿Requerido?                  true
        ¿Posición?                   0
        Valor predeterminado         None
        ¿Aceptar canalización?       True (ByPropertyName)
        ¿Aceptar caracteres comodín? false

    -Option <ScopedItemOptions>
        Specifies that the cmdlet sets the value of the Options property of the alias. The acceptable values for this parameter are:

        - None. Sets no options. (None is the default.)  - ReadOnly. Can be deleted. Cannot be not changed, except by using the Force parameter. -
        Constant. Cannot be deleted or changed. - Private. The alias is available only in the current scope.  - AllScope. The alias is copied to any
        new scopes that are created.

        To see the Options * * property of all aliases in the session, type `Get-Alias | Format-Table -Property name, options -autosize`.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -PassThru [<SwitchParameter>]
        Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Scope <String>
        Specifies the scope of the new alias. The acceptable values for this parameter are:

        - Global

        - Local

        - Script

        - A number relative to the current scope (0 through the number of scopes, where 0 is the current scope and 1 is its parent).


        Local is the default. For more information, see about_Scopes.


        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Value <String>
        Specifies the name of the cmdlet or command element that is being aliased.

        ¿Requerido?                  true
        ¿Posición?                   1
        Valor predeterminado         None
        ¿Aceptar canalización?       True (ByPropertyName)
        ¿Aceptar caracteres comodín? false

    -WhatIf [<SwitchParameter>]
        Shows what would happen if the cmdlet runs. The cmdlet is not run.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    <CommonParameters>
        Este cmdlet admite los parámetros comunes: Verbose, Debug,
        ErrorAction, ErrorVariable, WarningAction, WarningVariable,
        OutBuffer, PipelineVariable y OutVariable. Para obtener más información, consulta
        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).

ENTRADAS
    None
        You cannot pipe input to this cmdlet.


SALIDAS
    None or System.Management.Automation.AliasInfo
        When you use the Passthru parameter, New-Alias generates a System.Management.Automation.AliasInfo object representing the new alias.
        Otherwise, this cmdlet does not generate any output.


NOTAS


        To create a new alias, use Set-Alias or New-Alias. To change an alias, use Set-Alias *. To delete an alias, use Remove-Item.

        *

    Example 1: Create an alias for a cmdlet

    PS C:\>New-Alias -Name "List" Get-ChildItem

    This command creates an alias named List to represent the Get-ChildItem cmdlet.
    Example 2: Create a read-only alias for a cmdlet

    PS C:\>New-Alias -Name "W" -Value Get-WmiObject -Description "quick wmi alias" -Option ReadOnly
    PS C:\>Get-Alias -Name "W" | Format-List *

    This command creates an alias named W to represent the Get-WmiObject cmdlet. It creates a description, quick wmi alias, for the alias and makes
    it read-only. The last line of the command uses Get-Alias to get the new alias and pipes it to Format-List to display all of the information
    about it.

VÍNCULOS RELACIONADOS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821831
    Export-Alias
    Get-Alias
    Import-Alias
    Set-Alias



PS C:\Users\Usuario> help New-Alias -Examples

NOMBRE
    New-Alias

SINOPSIS
    Creates a new alias.


    Example 1: Create an alias for a cmdlet

    PS C:\>New-Alias -Name "List" Get-ChildItem

    This command creates an alias named List to represent the Get-ChildItem cmdlet.
    Example 2: Create a read-only alias for a cmdlet

    PS C:\>New-Alias -Name "W" -Value Get-WmiObject -Description "quick wmi alias" -Option ReadOnly
    PS C:\>Get-Alias -Name "W" | Format-List *

    This command creates an alias named W to represent the Get-WmiObject cmdlet. It creates a description, quick wmi alias, for the alias and makes
    it read-only. The last line of the command uses Get-Alias to get the new alias and pipes it to Format-List to display all of the information
    about it.



PS C:\Users\Usuario> New-Alias -Name "np" notepad.exe
PS C:\Users\Usuario> np
PS C:\Users\Usuario> Get-Command -Noun alias

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Export-Alias                                       3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          Get-Alias                                          3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          Import-Alias                                       3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          New-Alias                                          3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          Set-Alias                                          3.1.0.0    Microsoft.PowerShell.Utility


PS C:\Users\Usuario> Get-Alias

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Alias           % -> ForEach-Object
Alias           ? -> Where-Object
Alias           ac -> Add-Content
Alias           asnp -> Add-PSSnapin
Alias           cat -> Get-Content
Alias           cd -> Set-Location
Alias           CFS -> ConvertFrom-String                          3.1.0.0    Microsoft.PowerShell.Utility
Alias           chdir -> Set-Location
Alias           clc -> Clear-Content
Alias           clear -> Clear-Host
Alias           clhy -> Clear-History
Alias           cli -> Clear-Item
Alias           clp -> Clear-ItemProperty
Alias           cls -> Clear-Host
Alias           clv -> Clear-Variable
Alias           cnsn -> Connect-PSSession
Alias           compare -> Compare-Object
Alias           copy -> Copy-Item
Alias           cp -> Copy-Item
Alias           cpi -> Copy-Item
Alias           cpp -> Copy-ItemProperty
Alias           curl -> Invoke-WebRequest
Alias           cvpa -> Convert-Path
Alias           dbp -> Disable-PSBreakpoint
Alias           del -> Remove-Item
Alias           diff -> Compare-Object
Alias           dir -> Get-ChildItem
Alias           dnsn -> Disconnect-PSSession
Alias           ebp -> Enable-PSBreakpoint
Alias           echo -> Write-Output
Alias           epal -> Export-Alias
Alias           epcsv -> Export-Csv
Alias           epsn -> Export-PSSession
Alias           erase -> Remove-Item
Alias           etsn -> Enter-PSSession
Alias           exsn -> Exit-PSSession
Alias           fc -> Format-Custom
Alias           fhx -> Format-Hex                                  3.1.0.0    Microsoft.PowerShell.Utility
Alias           fl -> Format-List
Alias           foreach -> ForEach-Object
Alias           ft -> Format-Table
Alias           fw -> Format-Wide
Alias           gal -> Get-Alias
Alias           gbp -> Get-PSBreakpoint
Alias           gc -> Get-Content
Alias           gcb -> Get-Clipboard                               3.1.0.0    Microsoft.PowerShell.Management
Alias           gci -> Get-ChildItem
Alias           gcm -> Get-Command
Alias           gcs -> Get-PSCallStack
Alias           gdr -> Get-PSDrive
Alias           ghy -> Get-History
Alias           gi -> Get-Item
Alias           gin -> Get-ComputerInfo                            3.1.0.0    Microsoft.PowerShell.Management
Alias           gjb -> Get-Job
Alias           gl -> Get-Location
Alias           gm -> Get-Member
Alias           gmo -> Get-Module
Alias           gp -> Get-ItemProperty
Alias           gps -> Get-Process
Alias           gpv -> Get-ItemPropertyValue
Alias           group -> Group-Object
Alias           gsn -> Get-PSSession
Alias           gsnp -> Get-PSSnapin
Alias           gsv -> Get-Service
Alias           gtz -> Get-TimeZone                                3.1.0.0    Microsoft.PowerShell.Management
Alias           gu -> Get-Unique
Alias           gv -> Get-Variable
Alias           gwmi -> Get-WmiObject
Alias           h -> Get-History
Alias           history -> Get-History
Alias           icm -> Invoke-Command
Alias           iex -> Invoke-Expression
Alias           ihy -> Invoke-History
Alias           ii -> Invoke-Item
Alias           ipal -> Import-Alias
Alias           ipcsv -> Import-Csv
Alias           ipmo -> Import-Module
Alias           ipsn -> Import-PSSession
Alias           irm -> Invoke-RestMethod
Alias           ise -> powershell_ise.exe
Alias           iwmi -> Invoke-WmiMethod
Alias           iwr -> Invoke-WebRequest
Alias           kill -> Stop-Process
Alias           lp -> Out-Printer
Alias           ls -> Get-ChildItem
Alias           man -> help
Alias           md -> mkdir
Alias           measure -> Measure-Object
Alias           mi -> Move-Item
Alias           mount -> New-PSDrive
Alias           move -> Move-Item
Alias           mp -> Move-ItemProperty
Alias           mv -> Move-Item
Alias           nal -> New-Alias
Alias           ndr -> New-PSDrive
Alias           ni -> New-Item
Alias           nmo -> New-Module
Alias           np -> notepad.exe
Alias           npssc -> New-PSSessionConfigurationFile
Alias           nsn -> New-PSSession
Alias           nv -> New-Variable
Alias           ogv -> Out-GridView
Alias           oh -> Out-Host
Alias           popd -> Pop-Location
Alias           ps -> Get-Process
Alias           pushd -> Push-Location
Alias           pwd -> Get-Location
Alias           r -> Invoke-History
Alias           rbp -> Remove-PSBreakpoint
Alias           rcjb -> Receive-Job
Alias           rcsn -> Receive-PSSession
Alias           rd -> Remove-Item
Alias           rdr -> Remove-PSDrive
Alias           ren -> Rename-Item
Alias           ri -> Remove-Item
Alias           rjb -> Remove-Job
Alias           rm -> Remove-Item
Alias           rmdir -> Remove-Item
Alias           rmo -> Remove-Module
Alias           rni -> Rename-Item
Alias           rnp -> Rename-ItemProperty
Alias           rp -> Remove-ItemProperty
Alias           rsn -> Remove-PSSession
Alias           rsnp -> Remove-PSSnapin
Alias           rujb -> Resume-Job
Alias           rv -> Remove-Variable
Alias           rvpa -> Resolve-Path
Alias           rwmi -> Remove-WmiObject
Alias           sajb -> Start-Job
Alias           sal -> Set-Alias
Alias           saps -> Start-Process
Alias           sasv -> Start-Service
Alias           sbp -> Set-PSBreakpoint
Alias           sc -> Set-Content
Alias           scb -> Set-Clipboard                               3.1.0.0    Microsoft.PowerShell.Management
Alias           select -> Select-Object
Alias           set -> Set-Variable
Alias           shcm -> Show-Command
Alias           si -> Set-Item
Alias           sl -> Set-Location
Alias           sleep -> Start-Sleep
Alias           sls -> Select-String
Alias           sort -> Sort-Object
Alias           sp -> Set-ItemProperty
Alias           spjb -> Stop-Job
Alias           spps -> Stop-Process
Alias           spsv -> Stop-Service
Alias           start -> Start-Process
Alias           stz -> Set-TimeZone                                3.1.0.0    Microsoft.PowerShell.Management
Alias           sujb -> Suspend-Job
Alias           sv -> Set-Variable
Alias           swmi -> Set-WmiInstance
Alias           tee -> Tee-Object
Alias           trcm -> Trace-Command
Alias           type -> Get-Content
Alias           wget -> Invoke-WebRequest
Alias           where -> Where-Object
Alias           wjb -> Wait-Job
Alias           write -> Write-Output


PS C:\Users\Usuario> help Get-Alias -Parameter
>> ErrorTerminación(help): "Falta un argumento para el parámetro 'Parameter'. Especifique un parámetro del tipo 'System.String' e inténtelo de nuevo."
help : Falta un argumento para el parámetro 'Parameter'. Especifique un parámetro del tipo 'System.String' e inténtelo 
de nuevo.
En línea: 1 Carácter: 16
+ help Get-Alias -Parameter
+                ~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [help], ParameterBindingException
    + FullyQualifiedErrorId : MissingArgument,help
help : Falta un argumento para el parámetro 'Parameter'. Especifique un parámetro del tipo 'System.String' e inténtelo de nuevo.
En línea: 1 Carácter: 16
+ help Get-Alias -Parameter
+                ~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [help], ParameterBindingException
    + FullyQualifiedErrorId : MissingArgument,help

PS C:\Users\Usuario> help Get-Alias -Full

NOMBRE
    Get-Alias

SINOPSIS
    Gets the aliases for the current session.


SINTAXIS
    Get-Alias [-Definition <String[]>] [-Exclude <String[]>] [-Scope <String>] [<CommonParameters>]

    Get-Alias [[-Name] <String[]>] [-Exclude <String[]>] [-Scope <String>] [<CommonParameters>]


DESCRIPCIÓN
    The Get-Alias cmdlet gets the aliases in the current session. This includes built-in aliases, aliases that you have set or imported, and aliases
    that you have added to your Windows PowerShell profile.

    By default, Get-Alias takes an alias and returns the command name. When you use the Definition parameter, Get-Alias takes a command name and
    returns its aliases.

    Beginning in Windows PowerShell 3.0, Get-Alias displays non-hyphenated alias names in an <alias> -> <definition> format to make it even easier to
    find the information that you need.


PARÁMETROS
    -Definition <String[]>
        Specifies an array of aliases for the specified item. Enter the name of a cmdlet, function, script, file, or executable file.

        This parameter is called Definition , because it searches for the item name in the Definition property of the alias object.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Exclude <String[]>
        Specifies an array of items that this cmdlet omits. The value of this parameter qualifies the Name and Definition parameters. Enter a name, a
        definition, or a pattern, such as s*. Wildcards are permitted.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Name <String[]>
        Specifies the aliases that this cmdlet gets. Wildcards are permitted. By default, Get-Alias retrieves all aliases defined for the current
        session. The parameter name Name is optional. You can also pipe alias names to Get-Alias .

        ¿Requerido?                  false
        ¿Posición?                   0
        Valor predeterminado         None
        ¿Aceptar canalización?       True (ByPropertyName, ByValue)
        ¿Aceptar caracteres comodín? false

    -Scope <String>
        Gets only the aliases in the specified scope. The acceptable values for this parameter are:

        - Global

        - Local

        - Script

        - A number relative to the current scope (0 through the number of scopes, where 0 is the current scope and 1 is its parent)


        Local is the default. For more information, see about_Scopes.


        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    <CommonParameters>
        Este cmdlet admite los parámetros comunes: Verbose, Debug,
        ErrorAction, ErrorVariable, WarningAction, WarningVariable,
        OutBuffer, PipelineVariable y OutVariable. Para obtener más información, consulta
        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).

ENTRADAS
    System.String
        You can pipe alias names to Get-Alias .


SALIDAS
    System.Management.Automation.AliasInfo
        Get-Alias returns an object that represents each alias. Get-Alias returns the same object for every alias, but Windows PowerShell uses an
        arrow-based format to display the names of non-hyphenated aliases.


NOTAS


        * To create a new alias, use Set-Alias or New-Alias. To delete an alias, use Remove-Item.

        * The arrow-based alias name format is not used for aliases that include a hyphen. These are likely to be preferred substitute names for
        cmdlets and functions, instead of typical abbreviations or nicknames.

    Example 1: Get all aliases in the current session

    PS C:\>Get-Alias
    CommandType     Name
    -----------     ----
    Alias           % -> ForEach-Object
    Alias           ? -> Where-Object
    Alias           ac -> Add-Content
    Alias           asnp -> Add-PSSnapin
    Alias           cat -> Get-Content
    Alias           cd -> Set-Location
    Alias           chdir -> Set-Location
    Alias           clc -> Clear-Content
    Alias           clear -> Clear-Host
    Alias           clhy -> Clear-History â€¦

    This command gets all aliases in the current session.

    The output shows the <alias> -> <definition> format that was introduced in Windows PowerShell 3.0. This format is used only for aliases that do
    not include hyphens, because aliases with hyphens are typically preferred names for cmdlets and functions, rather than nicknames.
    Example 2: Get aliases by name

    PS C:\>Get-Alias -Name g*, s* -Exclude Get-*

    This command gets all aliases that begin with g or s, except for aliases that begin with Get-.
    Example 3: Get aliases for a cmdlet

    PS C:\>Get-Alias -Definition Get-ChildItem

    This command gets the aliases for the Get-ChildItem cmdlet.

    By default, the Get-Alias cmdlet gets the item name when you know the alias. The Definition parameter gets the alias when you know the item name.
    Example 4: Get aliases by property

    PS C:\>Get-Alias | Where-Object {$_.Options -Match "ReadOnly"}

    This command gets all aliases in which the value of the Options property is ReadOnly. This command provides a quick way to find the aliases that
    are built into Windows PowerShell, because they have the ReadOnly option.

    Options is just one property of the AliasInfo objects that Get-Alias gets. To find all properties and methods of AliasInfo objects, type
    `Get-Alias | get-member`.
    Example 5: Get aliases by name and filter by beginning letter

    PS C:\>Get-Alias -Definition "*-PSSession" -Exclude e* -Scope Global

    This example gets aliases for commands that have names that end in -PSSession, except for those that begin with e.

    The command uses the Scope parameter to apply the command in the global scope. This is useful in scripts when you want to get the aliases in the
    session.

VÍNCULOS RELACIONADOS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821778
    About Aliases
    Export-Alias
    Import-Alias
    New-Alias
    Set-Alias



PS C:\Users\Usuario> Get-EventLog -Newest 10
>> ErrorTerminación(Get-EventLog): "No existe el registro de eventos 'DAN' en el equipo '.'."
Get-EventLog : No existe el registro de eventos 'DAN' en el equipo '.'.
En línea: 1 Carácter: 1
+ Get-EventLog -Newest 10
+ ~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [Get-EventLog], InvalidOperationException
    + FullyQualifiedErrorId : System.InvalidOperationException,Microsoft.PowerShell.Commands.GetEventLogCommand
Get-EventLog : No existe el registro de eventos 'DAN' en el equipo '.'.
En línea: 1 Carácter: 1
+ Get-EventLog -Newest 10
+ ~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [Get-EventLog], InvalidOperationException
    + FullyQualifiedErrorId : System.InvalidOperationException,Microsoft.PowerShell.Commands.GetEventLogCommand

PS C:\Users\Usuario> help Get-EventLog -Full

NOMBRE
    Get-EventLog

SINOPSIS
    Gets the events in an event log, or a list of the event logs, on the local or remote computers.


SINTAXIS
    Get-EventLog [-LogName] <String> [[-InstanceId] <Int64[]>] [-After <DateTime>] [-AsBaseObject] [-Before <DateTime>] [-ComputerName <String[]>]
    [-EntryType {Error | Information | FailureAudit | SuccessAudit | Warning}] [-Index <Int32[]>] [-Message <String>] [-Newest <Int32>] [-Source
    <String[]>] [-UserName <String[]>] [<CommonParameters>]

    Get-EventLog [-AsString] [-ComputerName <String[]>] [-List] [<CommonParameters>]


DESCRIPCIÓN
    The Get-EventLog cmdlet gets events and event logs on the local and remote computers.

    You can use the parameters of this cmdlet to search for events by using their property values. This cmdlet gets only the events that match all of
    the specified property values.

    The cmdlets that contain the EventLog noun work only on classic event logs. To get events from logs that use the Windows Event Log technology in
    Windows Vista and later versions of Windows, use Get-WinEvent.


PARÁMETROS
    -After <DateTime>
        Specifies the data and time that this cmdlet get events that occur after. Enter a DateTime object, such as the one returned by the Get-Date
        cmdlet.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -AsBaseObject [<SwitchParameter>]
        Indicates that this cmdlet returns a standard System.Diagnostics.EventLogEntry object for each event. Without this parameter, this cmdlet
        returns an extended PSObject object with additional EventLogName , Source , and InstanceId properties.

        To see the effect of this parameter, pipe the events to the Get-Member cmdlet and examine the TypeName value in the result.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -AsString [<SwitchParameter>]
        Indicates that this cmdlet returns the output as strings, instead of objects.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Before <DateTime>
        Specifies the data and time that this cmdlet get events that occur before. Enter a DateTime object, such as the one returned by the Get-Date
        cmdlet.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -ComputerName <String[]>
        Specifies a remote computer. The default is the local computer.

        Type the NetBIOS name, an Internet Protocol (IP) address, or a fully qualified domain name (FQDN) of a remote computer. To specify the local
        computer, type the computer name, a dot (.), or localhost.

        This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Get-EventLog even if your computer is
        not configured to run remote commands.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -EntryType <String[]>
        Specifies, as a string array, the entry type of the events that this cmdlet gets.

        The acceptable values for this parameter are:

        - Error

        - Information

        - FailureAudit

        - SuccessAudit

        - Warning.

        The default is all events.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Index <Int32[]>
        Specifies the index values that this cmdlet gets events from.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -InstanceId <Int64[]>
        Specifies the instance IDs that this cmdlet gets events from.

        ¿Requerido?                  false
        ¿Posición?                   1
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -List [<SwitchParameter>]
        Indicates that this cmdlet gets a list of event logs on the computer.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -LogName <String>
        Specifies the event log. Enter the log name (the value of the Log property; not the LogDisplayName) of one event log. Wildcard characters are
        not permitted. This parameter is required.

        ¿Requerido?                  true
        ¿Posición?                   0
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Message <String>
        Specifies a string in the event message that this cmdlet gets event information from. You can use this property to search for messages that
        contain certain words or phrases. Wildcards are permitted.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Newest <Int32>
        Specifies the maximum number of events that this cmdlet gets. This cmdlet gets the specified number of events, beginning with the newest
        event in the log.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Source <String[]>
        Specifies, as a string array, sources that were written to the log that this cmdlet gets. Wildcards are permitted.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -UserName <String[]>
        Specifies, as a string array, user names that are associated with events. Enter names or name patterns, such as User01, User , or
        Domain01\User . Wildcards are permitted.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    <CommonParameters>
        Este cmdlet admite los parámetros comunes: Verbose, Debug,
        ErrorAction, ErrorVariable, WarningAction, WarningVariable,
        OutBuffer, PipelineVariable y OutVariable. Para obtener más información, consulta
        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).

ENTRADAS
    None.
        You cannot pipe input to this cmdlet.


SALIDAS
    System.Diagnostics.EventLogEntry. System.Diagnostics.EventLog. System.String
        If the LogName parameter is specified, the output is a collection of System.Diagnostics.EventLogEntry objects.

        If only the List parameter is specified, the output is a collection of System.Diagnostics.EventLog objects.

        If both the List and AsString parameters are specified, the output is a collection of System.String objects.


NOTAS


        * This cmdlet and the Get-WinEvent cmdlet are not supported in Windows Preinstallation Environment (Windows PE).

    Example 1: Get event logs on a computer

    PS C:\>Get-EventLog -List

    This command gets the event logs on the computer.
    Example 2: Get the five most recent entries from a specific event log

    PS C:\>Get-EventLog -Newest 5 -LogName "Application"

    This command gets the five most recent entries from the Application event log.
    Example 3: Find all sources that are represented in a specific number of entries in an event log

    PS C:\>$Events = Get-Eventlog -LogName system -Newest 1000
    PS C:\>$Events | Group-Object -Property source -noelement | Sort-Object -Property count -Descending











    Count Name
    ----- ----
    75    Service Control Manager
    12    Print
    6     UmrdpService
    2     DnsApi
    2     DCOM
    1     Dhcp
    1     TermDD
    1     volsnap

    This example shows how to find all of the sources that are represented in the 1000 most recent entries in the System event log.

    The first command gets the 1,000 most recent entries from the System event log and stores them in the $Events variable.

    The second command uses a pipeline operator (|) to send the events in $Events to the Group-Object cmdlet, which groups the entries by the value
    of the Source property. The command uses a second pipeline operator to send the grouped events to the Sort-Object cmdlet, which sorts them in
    descending order, so the most frequently appearing source is listed first.

    Source is just one property of event log entries. To see all of the properties of an event log entry, pipe the event log entries to the
    Get-Member cmdlet.
    Example 4: Get error events from a specific event log

    PS C:\>Get-EventLog -LogName System -EntryType Error

    This command gets only error events from the System event log.
    Example 5: Get events from a specific event log with an Instance ID and Source value

    PS C:\>Get-EventLog -LogName System -InstanceID 3221235481 -Source "DCOM"

    This command gets events from the System log that have an InstanceID of 3221235481 and a Source value of DCOM.
    Example 6: Get event log events from multiple computers

    PS C:\>Get-EventLog -LogName "Windows PowerShell" -ComputerName "localhost", "Server01", "Server02"

    This command gets the events from the Windows PowerShell event log on three computers, Server01, Server02, and the local computer, known as
    localhost.
    Example 7: Get all events in an event log that have include a specific word in the message value

    PS C:\>Get-EventLog -LogName "Windows PowerShell" -Message "*failed*"

    This command gets all the events in the Windows PowerShell event log that have a message value that includes the word failed.
    Example 8: Display the property values of an event in a list

    PS C:\>$A = Get-EventLog -Log System -Newest 1
    PS C:\>$A | Format-List -Property *

















    EventID            : 7036
    MachineName        : Server01
    Data               : {}
    Index              : 10238
    Category           : (0)
    CategoryNumber     : 0
    EntryType          : Information
    Message            : The description for Event ID
    Source             : Service Control Manager
    ReplacementStrings : {WinHTTP Web Proxy Auto-Disco
    InstanceId         : 1073748860
    TimeGenerated      : 4/11/2008 9:56:05 PM
    TimeWritten        : 4/11/2008 9:56:05 PM
    UserName           :
    Site               :
    Container          :

    This example shows how to display the property values of an event in a list.

    The first command gets the newest event from the System event log and saves it in the $A variable.

    The second command uses a pipeline operator (|) to send the event in $a to the Format-List command, which displays all (*) of the event
    properties.
    Example 9: Get events from an event log with using a source and event ID

    PS C:\>Get-EventLog -Log "Application" -Source "Outlook" | where {$_.eventID -eq 34}

    This command gets events in the Application event log where the source is Outlook and the event ID is 34. Even though this cmdlet does not have
    an EventID parameter, you can use the Where-Object cmdlet to select events based on the value of any event property.
    Example 10: Get event in an event log that is grouped by a property

    PS C:\>Get-EventLog -Log System -UserName "NT*" | Group-Object -Property "UserName" -noelement | Format-Table Count, Name -Auto






    Count Name
    ----- ----
    6031  NT AUTHORITY\SYSTEM
    42    NT AUTHORITY\LOCAL SERVICE
    4     NT AUTHORITY\NETWORK SERVICE

    This command returns the events in the system log grouped by the value of their UserName property. This command uses the UserName parameter to
    get only events in which the user name begins with NT*.
    Example 11: Get all errors in an event log that occurred during a specific time frame

    PS C:\>$May31 = Get-Date 5/31/08
    PS C:\>$July1 = Get-Date 7/01/08
    PS C:\>Get-EventLog -Log "Windows PowerShell" -EntryType Error -After $May31 -before $July1

    This command gets all of the errors in the Windows PowerShell event log that occurred in June 2008.

VÍNCULOS RELACIONADOS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821585
    Clear-EventLog
    Limit-EventLog
    New-EventLog
    Remove-EventLog
    Show-EventLog
    Write-EventLog



PS C:\Users\Usuario> Show-Command Get-Alias
PS C:\Users\Usuario> Get-Alias

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Alias           % -> ForEach-Object
Alias           ? -> Where-Object
Alias           ac -> Add-Content
Alias           asnp -> Add-PSSnapin
Alias           cat -> Get-Content
Alias           cd -> Set-Location
Alias           CFS -> ConvertFrom-String                          3.1.0.0    Microsoft.PowerShell.Utility
Alias           chdir -> Set-Location
Alias           clc -> Clear-Content
Alias           clear -> Clear-Host
Alias           clhy -> Clear-History
Alias           cli -> Clear-Item
Alias           clp -> Clear-ItemProperty
Alias           cls -> Clear-Host
Alias           clv -> Clear-Variable
Alias           cnsn -> Connect-PSSession
Alias           compare -> Compare-Object
Alias           copy -> Copy-Item
Alias           cp -> Copy-Item
Alias           cpi -> Copy-Item
Alias           cpp -> Copy-ItemProperty
Alias           curl -> Invoke-WebRequest
Alias           cvpa -> Convert-Path
Alias           dbp -> Disable-PSBreakpoint
Alias           del -> Remove-Item
Alias           diff -> Compare-Object
Alias           dir -> Get-ChildItem
Alias           dnsn -> Disconnect-PSSession
Alias           ebp -> Enable-PSBreakpoint
Alias           echo -> Write-Output
Alias           epal -> Export-Alias
Alias           epcsv -> Export-Csv
Alias           epsn -> Export-PSSession
Alias           erase -> Remove-Item
Alias           etsn -> Enter-PSSession
Alias           exsn -> Exit-PSSession
Alias           fc -> Format-Custom
Alias           fhx -> Format-Hex                                  3.1.0.0    Microsoft.PowerShell.Utility
Alias           fl -> Format-List
Alias           foreach -> ForEach-Object
Alias           ft -> Format-Table
Alias           fw -> Format-Wide
Alias           gal -> Get-Alias
Alias           gbp -> Get-PSBreakpoint
Alias           gc -> Get-Content
Alias           gcb -> Get-Clipboard                               3.1.0.0    Microsoft.PowerShell.Management
Alias           gci -> Get-ChildItem
Alias           gcm -> Get-Command
Alias           gcs -> Get-PSCallStack
Alias           gdr -> Get-PSDrive
Alias           ghy -> Get-History
Alias           gi -> Get-Item
Alias           gin -> Get-ComputerInfo                            3.1.0.0    Microsoft.PowerShell.Management
Alias           gjb -> Get-Job
Alias           gl -> Get-Location
Alias           gm -> Get-Member
Alias           gmo -> Get-Module
Alias           gp -> Get-ItemProperty
Alias           gps -> Get-Process
Alias           gpv -> Get-ItemPropertyValue
Alias           group -> Group-Object
Alias           gsn -> Get-PSSession
Alias           gsnp -> Get-PSSnapin
Alias           gsv -> Get-Service
Alias           gtz -> Get-TimeZone                                3.1.0.0    Microsoft.PowerShell.Management
Alias           gu -> Get-Unique
Alias           gv -> Get-Variable
Alias           gwmi -> Get-WmiObject
Alias           h -> Get-History
Alias           history -> Get-History
Alias           icm -> Invoke-Command
Alias           iex -> Invoke-Expression
Alias           ihy -> Invoke-History
Alias           ii -> Invoke-Item
Alias           ipal -> Import-Alias
Alias           ipcsv -> Import-Csv
Alias           ipmo -> Import-Module
Alias           ipsn -> Import-PSSession
Alias           irm -> Invoke-RestMethod
Alias           ise -> powershell_ise.exe
Alias           iwmi -> Invoke-WmiMethod
Alias           iwr -> Invoke-WebRequest
Alias           kill -> Stop-Process
Alias           lp -> Out-Printer
Alias           ls -> Get-ChildItem
Alias           man -> help
Alias           md -> mkdir
Alias           measure -> Measure-Object
Alias           mi -> Move-Item
Alias           mount -> New-PSDrive
Alias           move -> Move-Item
Alias           mp -> Move-ItemProperty
Alias           mv -> Move-Item
Alias           nal -> New-Alias
Alias           ndr -> New-PSDrive
Alias           ni -> New-Item
Alias           nmo -> New-Module
Alias           np -> notepad.exe
Alias           npssc -> New-PSSessionConfigurationFile
Alias           nsn -> New-PSSession
Alias           nv -> New-Variable
Alias           ogv -> Out-GridView
Alias           oh -> Out-Host
Alias           popd -> Pop-Location
Alias           ps -> Get-Process
Alias           pushd -> Push-Location
Alias           pwd -> Get-Location
Alias           r -> Invoke-History
Alias           rbp -> Remove-PSBreakpoint
Alias           rcjb -> Receive-Job
Alias           rcsn -> Receive-PSSession
Alias           rd -> Remove-Item
Alias           rdr -> Remove-PSDrive
Alias           ren -> Rename-Item
Alias           ri -> Remove-Item
Alias           rjb -> Remove-Job
Alias           rm -> Remove-Item
Alias           rmdir -> Remove-Item
Alias           rmo -> Remove-Module
Alias           rni -> Rename-Item
Alias           rnp -> Rename-ItemProperty
Alias           rp -> Remove-ItemProperty
Alias           rsn -> Remove-PSSession
Alias           rsnp -> Remove-PSSnapin
Alias           rujb -> Resume-Job
Alias           rv -> Remove-Variable
Alias           rvpa -> Resolve-Path
Alias           rwmi -> Remove-WmiObject
Alias           sajb -> Start-Job
Alias           sal -> Set-Alias
Alias           saps -> Start-Process
Alias           sasv -> Start-Service
Alias           sbp -> Set-PSBreakpoint
Alias           sc -> Set-Content
Alias           scb -> Set-Clipboard                               3.1.0.0    Microsoft.PowerShell.Management
Alias           select -> Select-Object
Alias           set -> Set-Variable
Alias           shcm -> Show-Command
Alias           si -> Set-Item
Alias           sl -> Set-Location
Alias           sleep -> Start-Sleep
Alias           sls -> Select-String
Alias           sort -> Sort-Object
Alias           sp -> Set-ItemProperty
Alias           spjb -> Stop-Job
Alias           spps -> Stop-Process
Alias           spsv -> Stop-Service
Alias           start -> Start-Process
Alias           stz -> Set-TimeZone                                3.1.0.0    Microsoft.PowerShell.Management
Alias           sujb -> Suspend-Job
Alias           sv -> Set-Variable
Alias           swmi -> Set-WmiInstance
Alias           tee -> Tee-Object
Alias           trcm -> Trace-Command
Alias           type -> Get-Content
Alias           wget -> Invoke-WebRequest
Alias           where -> Where-Object
Alias           wjb -> Wait-Job
Alias           write -> Write-Output


PS C:\Users\Usuario> regedit
PS C:\Users\Usuario> Get-PSProvider

Name                 Capabilities                                                     Drives
----                 ------------                                                     ------
Registry             ShouldProcess, Transactions                                      {HKLM, HKCU}
Alias                ShouldProcess                                                    {Alias}
Environment          ShouldProcess                                                    {Env}
FileSystem           Filter, ShouldProcess, Credentials                               {C, D}
Function             ShouldProcess                                                    {Function}
Variable             ShouldProcess                                                    {Variable}


PS C:\Users\Usuario> Get-Command -Noun *item*

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Get-DAEntryPointTableItem                          1.0.0.0    DirectAccessClientComponents
Function        Get-TestDriveItem                                  3.4.0      Pester
Function        New-DAEntryPointTableItem                          1.0.0.0    DirectAccessClientComponents
Function        Remove-DAEntryPointTableItem                       1.0.0.0    DirectAccessClientComponents
Function        Rename-DAEntryPointTableItem                       1.0.0.0    DirectAccessClientComponents
Function        Reset-DAEntryPointTableItem                        1.0.0.0    DirectAccessClientComponents
Function        Set-DAEntryPointTableItem                          1.0.0.0    DirectAccessClientComponents
Cmdlet          Clear-Item                                         3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Clear-ItemProperty                                 3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Copy-Item                                          3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Copy-ItemProperty                                  3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Get-ChildItem                                      3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Get-ControlPanelItem                               3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Get-Item                                           3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Get-ItemProperty                                   3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Get-ItemPropertyValue                              3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Invoke-Item                                        3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Move-Item                                          3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Move-ItemProperty                                  3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          New-Item                                           3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          New-ItemProperty                                   3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Remove-Item                                        3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Remove-ItemProperty                                3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Rename-Item                                        3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Rename-ItemProperty                                3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Set-Item                                           3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Set-ItemProperty                                   3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Show-ControlPanelItem                              3.1.0.0    Microsoft.PowerShell.Management


PS C:\Users\Usuario> help New-Item

NOMBRE
    New-Item

SINOPSIS
    Creates a new item.


SINTAXIS
    New-Item [[-Path] <String[]>] [-Confirm] [-Credential <PSCredential>] [-Force] [-ItemType <String>] -Name <String> [-UseTransaction] [-Value
    <Object>] [-WhatIf] [<CommonParameters>]

    New-Item [-Path] <String[]> [-Confirm] [-Credential <PSCredential>] [-Force] [-ItemType <String>] [-UseTransaction] [-Value <Object>] [-WhatIf]
    [<CommonParameters>]


DESCRIPCIÓN
    The New-Item cmdlet creates a new item and sets its value. The types of items that can be created depend on the location of the item. For
    example, in the file system, New-Item creates files and folders. In the registry, New-Item creates registry keys and entries. New-Item can also
    set the value of the items that it creates. For example, when it creates a new file, New-Item can add initial content to the file.


VÍNCULOS RELACIONADOS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821604
    Clear-Item
    Copy-Item
    Get-Item
    Invoke-Item
    Move-Item
    Remove-Item
    Rename-Item
    Set-Item

NOTAS
    Para ver los ejemplos, escriba: "get-help New-Item -examples".
    Para obtener más información, escriba: "get-help New-Item -detailed".
    Para obtener información técnica, escriba: "get-help New-Item -full".
    Para obtener ayuda disponible en línea, escriba: "get-help New-Item -online"


PS C:\Users\Usuario> help New-Item -Examples

NOMBRE
    New-Item

SINOPSIS
    Creates a new item.


    Example 1: Create a file in the current directory

    PS C:\>New-Item -Path . -Name "testfile1.txt" -ItemType "file" -Value "This is a text string."

    This command creates a text file that is named testfile1.txt in the current directory. The dot (.) in the value of the Path parameter indicates
    the current directory. The quoted text that follows the Value parameter is added to the file as content.
    Example 2: Create a directory

    PS C:\>New-Item -Path "c:\" -Name "logfiles" -ItemType "directory"

    This command creates a directory named Logfiles in the C: drive. The ItemType parameter specifies that the new item is a directory, not a file or
    other file system object.
    Example 3: Create a profile

    PS C:\>New-Item -Path $profile -ItemType "file" -Force

    This command creates a Windows PowerShell profile in the path that is specified by the $profile variable.

    You can use profiles to customize Windows PowerShell. $Profile is an automatic (built-in) variable that stores the path and file name of the
    CurrentUser/CurrentHost profile. By default, the profile does not exist, even though Windows PowerShell stores a path and file name for it.

    In this command, the $profile variable represents the path of the file. ItemType parameter specifies that the command creates a file. The Force
    parameter lets you create a file in the profile path, even when the directories in the path do not exist. Windows PowerShell creates them.

    After you use this command to create a profile, you can enter aliases, functions, and scripts in the profile to customize your shell.

    For more information, see about_Automatic_Variables and about_Profiles.
    Example 4: Create a directory in a different directory

    PS C:\>New-Item -ItemType "directory" -Path "c:\ps-test\scripts"

    This command creates a new Scripts directory in the C:\PS-Test directory.

    The name of the new directory item, Scripts, is included in the value of Path parameter, instead of being specified in the value of Name . As
    indicated by the syntax, either command form is valid.
    Example 5: Create multiple files

    PS C:\>New-Item -ItemType "file" -Path "c:\ps-test\test.txt", "c:\ps-test\Logs\test.log"

    This command creates files in two different directories. Because Path takes multiple strings, you can use it to create multiple items.



PS C:\Users\Usuario> New-Item -Path . -ItemType "file" -Name "archivo.txt"


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----      6/02/2019  8:03 a. m.              0 archivo.txt


PS C:\Users\Usuario> New-Item -Path . -ItemType "directory" -Name "dir-prueba"


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-----      6/02/2019  8:05 a. m.                dir-prueba


PS C:\Users\Usuario> ls -l 
>> ErrorTerminación(Get-ChildItem): "Falta un argumento para el parámetro 'LiteralPath'. Especifique un parámetro del tipo 'System.String[]' e inténtelo de nuevo."
Get-ChildItem : Falta un argumento para el parámetro 'LiteralPath'. Especifique un parámetro del tipo 'System.String[]' 
e inténtelo de nuevo.
En línea: 1 Carácter: 4
+ ls -l
+    ~~
    + CategoryInfo          : InvalidArgument: (:) [Get-ChildItem], ParameterBindingException
    + FullyQualifiedErrorId : MissingArgument,Microsoft.PowerShell.Commands.GetChildItemCommand
Get-ChildItem : Falta un argumento para el parámetro 'LiteralPath'. Especifique un parámetro del tipo 'System.String[]' e inténtelo de nuevo.
En línea: 1 Carácter: 4
+ ls -l
+    ~~
    + CategoryInfo          : InvalidArgument: (:) [Get-ChildItem], ParameterBindingException
    + FullyQualifiedErrorId : MissingArgument,Microsoft.PowerShell.Commands.GetChildItemCommand

PS C:\Users\Usuario> ls


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-r---     22/01/2019  2:33 p. m.                3D Objects
d-r---     22/01/2019  2:33 p. m.                Contacts
d-r---     30/01/2019  9:02 a. m.                Desktop
d-----      6/02/2019  8:05 a. m.                dir-prueba
d-r---     30/01/2019  8:59 a. m.                Documents
d-r---     22/01/2019  2:33 p. m.                Downloads
d-r---     22/01/2019  2:33 p. m.                Favorites
d-r---     22/01/2019  2:33 p. m.                Links
d-r---     22/01/2019  2:33 p. m.                Music
d-r---     30/01/2019  7:57 a. m.                OneDrive
d-r---     22/01/2019  2:35 p. m.                Pictures
d-r---     22/01/2019  2:33 p. m.                Saved Games
d-r---     22/01/2019  2:35 p. m.                Searches
d-r---     22/01/2019  2:33 p. m.                Videos
-a----      6/02/2019  8:03 a. m.              0 archivo.txt
-a----      6/02/2019  8:06 a. m.          77830 historia.txt


PS C:\Users\Usuario> Get-ChildItem


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-r---     22/01/2019  2:33 p. m.                3D Objects
d-r---     22/01/2019  2:33 p. m.                Contacts
d-r---     30/01/2019  9:02 a. m.                Desktop
d-----      6/02/2019  8:05 a. m.                dir-prueba
d-r---     30/01/2019  8:59 a. m.                Documents
d-r---     22/01/2019  2:33 p. m.                Downloads
d-r---     22/01/2019  2:33 p. m.                Favorites
d-r---     22/01/2019  2:33 p. m.                Links
d-r---     22/01/2019  2:33 p. m.                Music
d-r---     30/01/2019  7:57 a. m.                OneDrive
d-r---     22/01/2019  2:35 p. m.                Pictures
d-r---     22/01/2019  2:33 p. m.                Saved Games
d-r---     22/01/2019  2:35 p. m.                Searches
d-r---     22/01/2019  2:33 p. m.                Videos
-a----      6/02/2019  8:03 a. m.              0 archivo.txt
-a----      6/02/2019  8:06 a. m.          77830 historia.txt


PS C:\Users\Usuario> help Get-ChildItem -full

NOMBRE
    Get-ChildItem

SINOPSIS
    Gets the items and child items in one or more specified locations.


SINTAXIS
    Get-ChildItem [[-Filter] <String>] [-Attributes {ReadOnly | Hidden | System | Directory | Archive | Device | Normal | Temporary | SparseFile |
    ReparsePoint | Compressed | Offline | NotContentIndexed | Encrypted | IntegrityStream | NoScrubData}] [-Depth <UInt32>] [-Directory] [-Exclude
    <String[]>] [-File] [-Force] [-Hidden] [-Include <String[]>] -LiteralPath <String[]> [-Name] [-ReadOnly] [-Recurse] [-System] [-UseTransaction]
    [<CommonParameters>]

    Get-ChildItem [[-Path] <String[]>] [[-Filter] <String>] [-Attributes {ReadOnly | Hidden | System | Directory | Archive | Device | Normal |
    Temporary | SparseFile | ReparsePoint | Compressed | Offline | NotContentIndexed | Encrypted | IntegrityStream | NoScrubData}] [-Depth <UInt32>]
    [-Directory] [-Exclude <String[]>] [-File] [-Force] [-Hidden] [-Include <String[]>] [-Name] [-ReadOnly] [-Recurse] [-System] [-UseTransaction]
    [<CommonParameters>]


DESCRIPCIÓN
    The Get-ChildItem cmdlet gets the items in one or more specified locations. If the item is a container, it gets the items inside the container,
    known as child items. You can use the Recurse parameter to get items in all child containers.

    A location can be a file system location, such as a directory, or a location exposed by a different Windows PowerShell provider, such as a
    registry hive or a certificate store.


PARÁMETROS
    -Attributes <System.Management.Automation.FlagsExpression`1[System.IO.FileAttributes]>
        {{Fill Attributes Description}}

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Depth <UInt32>
        {{Fill Depth Description}}

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Directory [<SwitchParameter>]
        {{Fill Directory Description}}

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Exclude <String[]>
        Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path
        parameter. Enter a path element or pattern, such as *.txt. Wildcards are permitted.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -File [<SwitchParameter>]
        {{Fill File Description}}

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Filter <String>
        Specifies a filter in the provider's format or language. The value of this parameter qualifies the Path parameter. The syntax of the filter,
        including the use of wildcards, depends on the provider. Filters are more efficient than other parameters, because the provider applies them
        when retrieving the objects, rather than having Windows PowerShell filter the objects after they are retrieved.

        ¿Requerido?                  false
        ¿Posición?                   1
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Force [<SwitchParameter>]
        Forces the command to run without asking for user confirmation.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Hidden [<SwitchParameter>]
        {{Fill Hidden Description}}

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Include <String[]>
        Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path
        parameter. Enter a path element or pattern, such as *.txt. Wildcards are permitted.

        The Include parameter is effective only when the command includes the Recurse parameter or the path leads to the contents of a directory,
        such as C:\Windows\*, where the wildcard character specifies the contents of the C:\Windows directory.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -LiteralPath <String[]>
        Specifies, as a string arrya, a path to one or more locations. Unlike the Path parameter, the value of the LiteralPath parameter is used
        exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation
        marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.

        ¿Requerido?                  true
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       True (ByPropertyName)
        ¿Aceptar caracteres comodín? false

    -Name [<SwitchParameter>]
        Indicates that this cmdlet gets only the names of the items in the locations. If you pipe the output of this command to another command, only
        the item names are sent.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Path <String[]>
        Specifies a path to one or more locations. Wildcards are permitted. The default location is the current directory (.).

        ¿Requerido?                  false
        ¿Posición?                   0
        Valor predeterminado         Current directory
        ¿Aceptar canalización?       True (ByPropertyName, ByValue)
        ¿Aceptar caracteres comodín? false

    -ReadOnly [<SwitchParameter>]
        {{Fill ReadOnly Description}}

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Recurse [<SwitchParameter>]
        Indicates that this cmdlet gets the items in the specified locations and in all child items of the locations.

        In Windows PowerShell 2.0 and earlier versions of Windows PowerShell, the Recurse parameter works only when the value of the Path parameter
        is a container that has child items, such as C:\Windows or C:\Windows\ , and not when it is an item does not have child items, such as
        C:\Windows\ .exe.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -System [<SwitchParameter>]
        {{Fill System Description}}

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -UseTransaction [<SwitchParameter>]
        Includes the command in the active transaction. This parameter is valid only when a transaction is in progress. For more information, see
        Includes the command in the active transaction. This parameter is valid only when a transaction is in progress. For more information, see

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    <CommonParameters>
        Este cmdlet admite los parámetros comunes: Verbose, Debug,
        ErrorAction, ErrorVariable, WarningAction, WarningVariable,
        OutBuffer, PipelineVariable y OutVariable. Para obtener más información, consulta
        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).

ENTRADAS
    System.String
        You can pipe a string that contains a path to this cmdlet.


SALIDAS
    System.Object
        The type of object that this cmdlet returns is determined by the objects in the provider drive path.

    System.String
        If you use the Name parameter, Get-ChildItem returns the object names as strings.


NOTAS


        You can also refer to Get-ChildItem * by its built-in aliases, ls, dir, and gci. For more information, see about_Aliases.

        This cmdlet does not get hidden items by default. To get hidden items, use the Force parameter.

        The Get-ChildItem cmdlet is designed to work with the data exposed by any provider. To list the providers available in your session, type
        `Get-PSProvider`. For more information, see about_Providers (http://go.microsoft.com/fwlink/?LinkID=113250).

        *

    Example 1: Get child items in the current directory

    PS C:\>Get-ChildItem

    This command gets the child items in the current location. If the location is a file system directory, it gets the files and sub-directories in
    the current directory. If the item does not have child items, this command returns to the command prompt without displaying anything.

    The default display lists the mode (attributes), last write time, file size (length), and the name of the file. The valid values for mode are d
    (directory), a (archive), r (read-only), h (hidden), and s (system).
    Example 2: Get all files with the specified file extension in the current directory and subdirectories

    PS C:\>Get-ChildItem -Path "*.txt" -Recurse -Force

    This command gets all of the .txt files in the current directory and its subdirectories. The Recurse parameter directs Windows PowerShell to get
    objects recursively, and it indicates that the subject of the command is the specified directory and its contents. The Force parameter adds
    hidden files to the display.

    To use the Recurse parameter on Windows PowerShell 2.0 and earlier versions of Windows PowerShell, the Path parameter must be a container. Use
    the Include parameter to specify the .txt file type. For instance, `Get-ChildItem -Path .\ -Include .txt -Recurse`
    Example 3: Get all child items using an inclusion and exclusion

    PS C:\>Get-ChildItem -Path "C:\Windows\Logs\*" -Include "*.txt" -Exclude "A*"

    This command lists the .txt files in the Logs subdirectory, except for those whose names start with the letter A. It uses the wildcard character
    (*) to indicate the contents of the Logs subdirectory, not the directory container. Because the command does not include the Recurse parameter,
    the command does not include the content of directory automatically; you need to specify it.
    Example 4: Get all registry keys in a specific key

    PS C:\>Get-ChildItem -Path "HKLM:\Software"

    This command gets all of the registry keys in the HKEY_LOCAL_MACHINE\SOFTWARE key in the registry of the local computer.
    Example 5: Get the name of items in the current directory

    PS C:\>Get-ChildItem -Name

    This command gets only the names of items in the current directory.
    Example 6: Get all certificates in a certification drive that have code-signing authority

    PS C:\>Import-Module Microsoft.PowerShell.Security
    PS C:\>Get-ChildItem -Path "Cert:\*" -Recurse -CodeSigningCert

    This command gets all of the certificates in the Windows PowerShell Cert: drive that have code-signing authority.

    The first command imports the Microsoft.PowerShell.Security module into the session. This module includes the Certificate provider that creates
    the Cert: drive.

    The second command uses the Get-ChildItem cmdlet. The value of the Path parameter is the Cert: drive. The Recurse parameter requests a recursive
    search. The CodeSigningCertificate parameter is a dynamic parameter that the Certificate provider adds to the Get-ChildItem cmdlet. This
    parameter gets only certificates that have code-signing authority.

    For more information about the Certificate provider and the Cert: drive, go to
    http://go.microsoft.com/fwlink/?LinkID=113433http://go.microsoft.com/fwlink/?LinkID=113433 or use the Update-Help cmdlet to download the help
    files for the Microsoft.PowerShell.Security module and then type `Get-Help Certificate`.
    Example 7: Get all items in the specified directory and its subdirectories that have an inclusion and exclusion

    PS C:\>Get-ChildItem -Path C:\Windows -Include "*mouse*" -Exclude "*.png"

    This command gets all of the items in the C:\Windows directory and its subdirectories that have mouse in the file name, except for those with a
    .png file name extension.

VÍNCULOS RELACIONADOS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821580
    Get-Item
    Get-Location
    Get-Process
    Get-PSProvider



PS C:\Users\Usuario> Get-Alias -Definition Get-ChildItem

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Alias           dir -> Get-ChildItem
Alias           gci -> Get-ChildItem
Alias           ls -> Get-ChildItem


PS C:\Users\Usuario> Remove-Item -Path .\archivo.txt
PS C:\Users\Usuario> ls


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-r---     22/01/2019  2:33 p. m.                3D Objects
d-r---     22/01/2019  2:33 p. m.                Contacts
d-r---     30/01/2019  9:02 a. m.                Desktop
d-----      6/02/2019  8:05 a. m.                dir-prueba
d-r---     30/01/2019  8:59 a. m.                Documents
d-r---     22/01/2019  2:33 p. m.                Downloads
d-r---     22/01/2019  2:33 p. m.                Favorites
d-r---     22/01/2019  2:33 p. m.                Links
d-r---     22/01/2019  2:33 p. m.                Music
d-r---     30/01/2019  7:57 a. m.                OneDrive
d-r---     22/01/2019  2:35 p. m.                Pictures
d-r---     22/01/2019  2:33 p. m.                Saved Games
d-r---     22/01/2019  2:35 p. m.                Searches
d-r---     22/01/2019  2:33 p. m.                Videos
-a----      6/02/2019  8:10 a. m.          94584 historia.txt


PS C:\Users\Usuario> Remove-Item -Path .\dir-prueba
PS C:\Users\Usuario> ls


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-r---     22/01/2019  2:33 p. m.                3D Objects
d-r---     22/01/2019  2:33 p. m.                Contacts
d-r---     30/01/2019  9:02 a. m.                Desktop
d-r---     30/01/2019  8:59 a. m.                Documents
d-r---     22/01/2019  2:33 p. m.                Downloads
d-r---     22/01/2019  2:33 p. m.                Favorites
d-r---     22/01/2019  2:33 p. m.                Links
d-r---     22/01/2019  2:33 p. m.                Music
d-r---     30/01/2019  7:57 a. m.                OneDrive
d-r---     22/01/2019  2:35 p. m.                Pictures
d-r---     22/01/2019  2:33 p. m.                Saved Games
d-r---     22/01/2019  2:35 p. m.                Searches
d-r---     22/01/2019  2:33 p. m.                Videos
-a----      6/02/2019  8:11 a. m.          95709 historia.txt


PS C:\Users\Usuario> Get-Alias cd*

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Alias           cd -> Set-Location


PS C:\Users\Usuario> help Set-Location

NOMBRE
    Set-Location

SINOPSIS
    Sets the current working location to a specified location.


SINTAXIS
    Set-Location -LiteralPath <String> [-PassThru] [-UseTransaction] [<CommonParameters>]

    Set-Location [[-Path] <String>] [-PassThru] [-UseTransaction] [<CommonParameters>]

    Set-Location [-PassThru] [-StackName <String>] [-UseTransaction] [<CommonParameters>]


DESCRIPCIÓN
    The Set-Location cmdlet sets the working location to a specified location. That location could be a directory, a sub-directory, a registry
    location, or any provider path.

    You can also use the StackName parameter of to make a named location stack the current location stack. For more information about location
    stacks, see the Notes.


VÍNCULOS RELACIONADOS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821632
    Get-Location
    Pop-Location
    Push-Location

NOTAS
    Para ver los ejemplos, escriba: "get-help Set-Location -examples".
    Para obtener más información, escriba: "get-help Set-Location -detailed".
    Para obtener información técnica, escriba: "get-help Set-Location -full".
    Para obtener ayuda disponible en línea, escriba: "get-help Set-Location -online"


PS C:\Users\Usuario> New-Item -Path . -ItemType "directory" -Name "dir-2"


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-----      6/02/2019  8:13 a. m.                dir-2


PS C:\Users\Usuario> cd .\dir-2
PS C:\Users\Usuario\dir-2> New-Item -Path . -ItemType "file" -Name "archivo.txt"


    Directorio: C:\Users\Usuario\dir-2


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----      6/02/2019  8:14 a. m.              0 archivo.txt


PS C:\Users\Usuario\dir-2> cd
PS C:\Users\Usuario\dir-2> cd .
PS C:\Users\Usuario\dir-2> cd/
cd/ : El término 'cd/' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable. 
Compruebe si escribió correctamente el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e 
inténtelo de nuevo.
En línea: 1 Carácter: 1
+ cd/
+ ~~~
    + CategoryInfo          : ObjectNotFound: (cd/:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
cd/ : El término 'cd/' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable. Compruebe si escribió correctamente
el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e inténtelo de nuevo.
En línea: 1 Carácter: 1
+ cd/
+ ~~~
    + CategoryInfo          : ObjectNotFound: (cd/:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\Usuario\dir-2> cd ..
PS C:\Users\Usuario> ls


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-r---     22/01/2019  2:33 p. m.                3D Objects
d-r---     22/01/2019  2:33 p. m.                Contacts
d-r---     30/01/2019  9:02 a. m.                Desktop
d-----      6/02/2019  8:14 a. m.                dir-2
d-r---     30/01/2019  8:59 a. m.                Documents
d-r---     22/01/2019  2:33 p. m.                Downloads
d-r---     22/01/2019  2:33 p. m.                Favorites
d-r---     22/01/2019  2:33 p. m.                Links
d-r---     22/01/2019  2:33 p. m.                Music
d-r---     30/01/2019  7:57 a. m.                OneDrive
d-r---     22/01/2019  2:35 p. m.                Pictures
d-r---     22/01/2019  2:33 p. m.                Saved Games
d-r---     22/01/2019  2:35 p. m.                Searches
d-r---     22/01/2019  2:33 p. m.                Videos
-a----      6/02/2019  8:11 a. m.          95709 historia.txt


PS C:\Users\Usuario> Remove-Item -Path .\dir-2
Confirmar
El elemento situado en C:\Users\Usuario\dir-2 tiene elementos secundarios y no se especificó el parámetro Recurse. Si continúa, se quitarán todos los secundarios junto con el elemento. ¿Está seguro de que desea continuar?
&Sí  Sí a t&odo  &No  No a &todo  S&uspender
o
PS C:\Users\Usuario> ls


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-r---     22/01/2019  2:33 p. m.                3D Objects
d-r---     22/01/2019  2:33 p. m.                Contacts
d-r---     30/01/2019  9:02 a. m.                Desktop
d-r---     30/01/2019  8:59 a. m.                Documents
d-r---     22/01/2019  2:33 p. m.                Downloads
d-r---     22/01/2019  2:33 p. m.                Favorites
d-r---     22/01/2019  2:33 p. m.                Links
d-r---     22/01/2019  2:33 p. m.                Music
d-r---     30/01/2019  7:57 a. m.                OneDrive
d-r---     22/01/2019  2:35 p. m.                Pictures
d-r---     22/01/2019  2:33 p. m.                Saved Games
d-r---     22/01/2019  2:35 p. m.                Searches
d-r---     22/01/2019  2:33 p. m.                Videos
-a----      6/02/2019  8:11 a. m.          95709 historia.txt


PS C:\Users\Usuario> New-Item -Path . -ItemType "directory" -Name "dir-2"


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-----      6/02/2019  8:16 a. m.                dir-2


PS C:\Users\Usuario> cd .\dir-2
PS C:\Users\Usuario\dir-2> New-Item -Path . -ItemType "file" -Name "archivo.txt"


    Directorio: C:\Users\Usuario\dir-2


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----      6/02/2019  8:16 a. m.              0 archivo.txt


PS C:\Users\Usuario\dir-2> cd ..
PS C:\Users\Usuario> Remove-Item -Path .\dir-2 -Recurse 
PS C:\Users\Usuario> ls


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-r---     22/01/2019  2:33 p. m.                3D Objects
d-r---     22/01/2019  2:33 p. m.                Contacts
d-r---     30/01/2019  9:02 a. m.                Desktop
d-r---     30/01/2019  8:59 a. m.                Documents
d-r---     22/01/2019  2:33 p. m.                Downloads
d-r---     22/01/2019  2:33 p. m.                Favorites
d-r---     22/01/2019  2:33 p. m.                Links
d-r---     22/01/2019  2:33 p. m.                Music
d-r---     30/01/2019  7:57 a. m.                OneDrive
d-r---     22/01/2019  2:35 p. m.                Pictures
d-r---     22/01/2019  2:33 p. m.                Saved Games
d-r---     22/01/2019  2:35 p. m.                Searches
d-r---     22/01/2019  2:33 p. m.                Videos
-a----      6/02/2019  8:16 a. m.         103039 historia.txt


PS C:\Users\Usuario> New-Item -Path . -ItemType "file" -Name "archivo.txt"


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----      6/02/2019  8:23 a. m.              0 archivo.txt


PS C:\Users\Usuario> Get-Command -Noun rename*
PS C:\Users\Usuario> Get-Command -Noun Rename*
PS C:\Users\Usuario> Get-Command -Noun *rename
PS C:\Users\Usuario> Get-Command -Noun rename
PS C:\Users\Usuario> Get-Command -Noun alias

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Export-Alias                                       3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          Get-Alias                                          3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          Import-Alias                                       3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          New-Alias                                          3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          Set-Alias                                          3.1.0.0    Microsoft.PowerShell.Utility


PS C:\Users\Usuario> Get-Command -Noun *item

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Get-DAEntryPointTableItem                          1.0.0.0    DirectAccessClientComponents
Function        Get-TestDriveItem                                  3.4.0      Pester
Function        New-DAEntryPointTableItem                          1.0.0.0    DirectAccessClientComponents
Function        Remove-DAEntryPointTableItem                       1.0.0.0    DirectAccessClientComponents
Function        Rename-DAEntryPointTableItem                       1.0.0.0    DirectAccessClientComponents
Function        Reset-DAEntryPointTableItem                        1.0.0.0    DirectAccessClientComponents
Function        Set-DAEntryPointTableItem                          1.0.0.0    DirectAccessClientComponents
Cmdlet          Clear-Item                                         3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Copy-Item                                          3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Get-ChildItem                                      3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Get-ControlPanelItem                               3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Get-Item                                           3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Invoke-Item                                        3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Move-Item                                          3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          New-Item                                           3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Remove-Item                                        3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Rename-Item                                        3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Set-Item                                           3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Show-ControlPanelItem                              3.1.0.0    Microsoft.PowerShell.Management


PS C:\Users\Usuario> Get-Command -Verb rename*

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Rename-DAEntryPointTableItem                       1.0.0.0    DirectAccessClientComponents
Function        Rename-MaskingSet                                  2.0.0.0    Storage
Function        Rename-NetAdapter                                  2.0.0.0    NetAdapter
Function        Rename-NetFirewallRule                             2.0.0.0    NetSecurity
Function        Rename-NetIPHttpsConfiguration                     1.0.0.0    NetworkTransition
Function        Rename-NetIPsecMainModeCryptoSet                   2.0.0.0    NetSecurity
Function        Rename-NetIPsecMainModeRule                        2.0.0.0    NetSecurity
Function        Rename-NetIPsecPhase1AuthSet                       2.0.0.0    NetSecurity
Function        Rename-NetIPsecPhase2AuthSet                       2.0.0.0    NetSecurity
Function        Rename-NetIPsecQuickModeCryptoSet                  2.0.0.0    NetSecurity
Function        Rename-NetIPsecRule                                2.0.0.0    NetSecurity
Function        Rename-NetLbfoTeam                                 2.0.0.0    NetLbfo
Function        Rename-NetSwitchTeam                               1.0.0.0    NetSwitchTeam
Function        Rename-Printer                                     1.1        PrintManagement
Cmdlet          Rename-Computer                                    3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Rename-Item                                        3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Rename-ItemProperty                                3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Rename-LocalGroup                                  1.0.0.0    Microsoft.PowerShell.LocalAccounts
Cmdlet          Rename-LocalUser                                   1.0.0.0    Microsoft.PowerShell.LocalAccounts


PS C:\Users\Usuario> help Rename-Item -Examples

NOMBRE
    Rename-Item

SINOPSIS
    Renames an item in a Windows PowerShell provider namespace.


    Example 1: Rename a file

    PS C:\>Rename-Item -Path "c:\logfiles\daily_file.txt" -NewName "monday_file.txt"

    This command renames the file daily_file.txt to monday_file.txt.
    Example 2: Rename and move an item

    The first command attempts to rename the project.txt file in the current directory to old-project.txt in the D:\Archive directory. The result is
    the error shown in the output.
    PS C:\>Rename-Item -Path "project.txt" -NewName "d:\archive\old-project.txt"
    Rename-Item : Cannot rename because the target specified represents a path or device name.
    At line:1 char:12
    + rename-item <<<<  -path project.txt -newname d:\archive\old-project.txt
    + CategoryInfo          : InvalidArgument: (:) [Rename-Item], PSArgumentException
    + FullyQualifiedErrorId : Argument,Microsoft.PowerShell.Commands.RenameItemCommand

    The second command shows the correct way to move and rename a file by using **Move-Item**. The **Move-Item** cmdlet lets you specify both a new
    path and a new name in the value of its *Destination* parameter.
    PS C:\>Move-Item -Path "project.txt" -Destination "d:\archive\old-project.txt"

    This example shows that you cannot use Rename-Item to both rename and move an item. Specifically, you cannot supply a path for the value of the
    NewName parameter, unless the path is identical to the path specified in the Path parameter. Otherwise, only a new name is permitted.
    Example 3: Rename a registry key

    PS C:\>Rename-Item -Path "HKLM:\Software\MyCompany\Advertising" -NewName "Marketing"

    This command renames a registry key from Advertising to Marketing. When the command is complete, the key is renamed, but the registry entries in
    the key are unchanged.
    Example 4: Rename multiple files

    PS C:\>Get-ChildItem *.txt | Rename-Item -NewName { $_.name -Replace '\.txt','.log' }

    This example shows how to use the Replace operator to rename multiple files, even though the NewName parameter does not accept wildcard
    characters.

    This command renames all of the .txt files in the current directory to .log.

    The command uses the Get-ChildItem cmdlet to get all of the files in the current folder that have a .txt file name extension. Then, it uses the
    pipeline operator (|) to send those files to Rename-Item .

    The value of NewName is a script block that runs before the value is submitted to the NewName parameter.

    In the script block, the $_ automatic variable represents each file object as it comes to the command through the pipeline. The command uses the
    dot format (.) to get the Name property of each file object. The Replace operator replaces the .txt file name extension of each file with .log.

    Because the Replace operator works with regular expressions, the dot in front of txt is interpreted to match any character. To make sure that it
    matches only a dot (.), it is escaped with a backslash character (\). The backslash character is not required in .log because it is a string, not
    a regular expression.



PS C:\Users\Usuario> Rename-Item -Path .\archivo.txt -NewName "epalaarepa.txt"
PS C:\Users\Usuario> ls


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-r---     22/01/2019  2:33 p. m.                3D Objects
d-r---     22/01/2019  2:33 p. m.                Contacts
d-r---     30/01/2019  9:02 a. m.                Desktop
d-r---     30/01/2019  8:59 a. m.                Documents
d-r---     22/01/2019  2:33 p. m.                Downloads
d-r---     22/01/2019  2:33 p. m.                Favorites
d-r---     22/01/2019  2:33 p. m.                Links
d-r---     22/01/2019  2:33 p. m.                Music
d-r---     30/01/2019  7:57 a. m.                OneDrive
d-r---     22/01/2019  2:35 p. m.                Pictures
d-r---     22/01/2019  2:33 p. m.                Saved Games
d-r---     22/01/2019  2:35 p. m.                Searches
d-r---     22/01/2019  2:33 p. m.                Videos
-a----      6/02/2019  8:23 a. m.              0 epalaarepa.txt
-a----      6/02/2019  8:27 a. m.         113001 historia.txt


PS C:\Users\Usuario> New-Item -Path . -ItemType "directory" -Name nuevodir


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-----      6/02/2019  8:30 a. m.                nuevodir


PS C:\Users\Usuario> ls


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-r---     22/01/2019  2:33 p. m.                3D Objects
d-r---     22/01/2019  2:33 p. m.                Contacts
d-r---     30/01/2019  9:02 a. m.                Desktop
d-r---     30/01/2019  8:59 a. m.                Documents
d-r---     22/01/2019  2:33 p. m.                Downloads
d-r---     22/01/2019  2:33 p. m.                Favorites
d-r---     22/01/2019  2:33 p. m.                Links
d-r---     22/01/2019  2:33 p. m.                Music
d-----      6/02/2019  8:30 a. m.                nuevodir
d-r---     30/01/2019  7:57 a. m.                OneDrive
d-r---     22/01/2019  2:35 p. m.                Pictures
d-r---     22/01/2019  2:33 p. m.                Saved Games
d-r---     22/01/2019  2:35 p. m.                Searches
d-r---     22/01/2019  2:33 p. m.                Videos
-a----      6/02/2019  8:23 a. m.              0 epalaarepa.txt
-a----      6/02/2019  8:27 a. m.         114156 historia.txt


PS C:\Users\Usuario> mv .\epalaarepa.txt .\nuevodir
PS C:\Users\Usuario> ls


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-r---     22/01/2019  2:33 p. m.                3D Objects
d-r---     22/01/2019  2:33 p. m.                Contacts
d-r---     30/01/2019  9:02 a. m.                Desktop
d-r---     30/01/2019  8:59 a. m.                Documents
d-r---     22/01/2019  2:33 p. m.                Downloads
d-r---     22/01/2019  2:33 p. m.                Favorites
d-r---     22/01/2019  2:33 p. m.                Links
d-r---     22/01/2019  2:33 p. m.                Music
d-----      6/02/2019  8:31 a. m.                nuevodir
d-r---     30/01/2019  7:57 a. m.                OneDrive
d-r---     22/01/2019  2:35 p. m.                Pictures
d-r---     22/01/2019  2:33 p. m.                Saved Games
d-r---     22/01/2019  2:35 p. m.                Searches
d-r---     22/01/2019  2:33 p. m.                Videos
-a----      6/02/2019  8:27 a. m.         114156 historia.txt


PS C:\Users\Usuario> Get-Alias -Definition cd
Get-Alias : Este comando no encuentra un alias coincidente porque no existe ningún alias con definition 'cd'.
En línea: 1 Carácter: 1
+ Get-Alias -Definition cd
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (cd:String) [Get-Alias], ItemNotFoundException
    + FullyQualifiedErrorId : ItemNotFoundException,Microsoft.PowerShell.Commands.GetAliasCommand
Get-Alias : Este comando no encuentra un alias coincidente porque no existe ningún alias con definition 'cd'.
En línea: 1 Carácter: 1
+ Get-Alias -Definition cd
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (cd:String) [Get-Alias], ItemNotFoundException
    + FullyQualifiedErrorId : ItemNotFoundException,Microsoft.PowerShell.Commands.GetAliasCommand

PS C:\Users\Usuario> Get-Alias -Definition "cd"
Get-Alias : Este comando no encuentra un alias coincidente porque no existe ningún alias con definition 'cd'.
En línea: 1 Carácter: 1
+ Get-Alias -Definition "cd"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (cd:String) [Get-Alias], ItemNotFoundException
    + FullyQualifiedErrorId : ItemNotFoundException,Microsoft.PowerShell.Commands.GetAliasCommand
Get-Alias : Este comando no encuentra un alias coincidente porque no existe ningún alias con definition 'cd'.
En línea: 1 Carácter: 1
+ Get-Alias -Definition "cd"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (cd:String) [Get-Alias], ItemNotFoundException
    + FullyQualifiedErrorId : ItemNotFoundException,Microsoft.PowerShell.Commands.GetAliasCommand

PS C:\Users\Usuario> Get-Alias cd*

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Alias           cd -> Set-Location


PS C:\Users\Usuario> Get-Alias mv*

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Alias           mv -> Move-Item


PS C:\Users\Usuario> ls


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-r---     22/01/2019  2:33 p. m.                3D Objects
d-r---     22/01/2019  2:33 p. m.                Contacts
d-r---     30/01/2019  9:02 a. m.                Desktop
d-r---     30/01/2019  8:59 a. m.                Documents
d-r---     22/01/2019  2:33 p. m.                Downloads
d-r---     22/01/2019  2:33 p. m.                Favorites
d-r---     22/01/2019  2:33 p. m.                Links
d-r---     22/01/2019  2:33 p. m.                Music
d-----      6/02/2019  8:31 a. m.                nuevodir
d-r---     30/01/2019  7:57 a. m.                OneDrive
d-r---     22/01/2019  2:35 p. m.                Pictures
d-r---     22/01/2019  2:33 p. m.                Saved Games
d-r---     22/01/2019  2:35 p. m.                Searches
d-r---     22/01/2019  2:33 p. m.                Videos
-a----      6/02/2019  8:32 a. m.         116750 historia.txt


PS C:\Users\Usuario> pwd

Path
----
C:\Users\Usuario


PS C:\Users\Usuario> cd .\nuevodir
PS C:\Users\Usuario\nuevodir> mv .\epalaarepa.txt ..
PS C:\Users\Usuario\nuevodir> ls
PS C:\Users\Usuario\nuevodir> cd ..
PS C:\Users\Usuario> ls


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-r---     22/01/2019  2:33 p. m.                3D Objects
d-r---     22/01/2019  2:33 p. m.                Contacts
d-r---     30/01/2019  9:02 a. m.                Desktop
d-r---     30/01/2019  8:59 a. m.                Documents
d-r---     22/01/2019  2:33 p. m.                Downloads
d-r---     22/01/2019  2:33 p. m.                Favorites
d-r---     22/01/2019  2:33 p. m.                Links
d-r---     22/01/2019  2:33 p. m.                Music
d-----      6/02/2019  8:33 a. m.                nuevodir
d-r---     30/01/2019  7:57 a. m.                OneDrive
d-r---     22/01/2019  2:35 p. m.                Pictures
d-r---     22/01/2019  2:33 p. m.                Saved Games
d-r---     22/01/2019  2:35 p. m.                Searches
d-r---     22/01/2019  2:33 p. m.                Videos
-a----      6/02/2019  8:23 a. m.              0 epalaarepa.txt
-a----      6/02/2019  8:32 a. m.         116750 historia.txt


PS C:\Users\Usuario> Rename-Item .\epalaarepa.txt archivo.txt
PS C:\Users\Usuario> ls


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-r---     22/01/2019  2:33 p. m.                3D Objects
d-r---     22/01/2019  2:33 p. m.                Contacts
d-r---     30/01/2019  9:02 a. m.                Desktop
d-r---     30/01/2019  8:59 a. m.                Documents
d-r---     22/01/2019  2:33 p. m.                Downloads
d-r---     22/01/2019  2:33 p. m.                Favorites
d-r---     22/01/2019  2:33 p. m.                Links
d-r---     22/01/2019  2:33 p. m.                Music
d-----      6/02/2019  8:33 a. m.                nuevodir
d-r---     30/01/2019  7:57 a. m.                OneDrive
d-r---     22/01/2019  2:35 p. m.                Pictures
d-r---     22/01/2019  2:33 p. m.                Saved Games
d-r---     22/01/2019  2:35 p. m.                Searches
d-r---     22/01/2019  2:33 p. m.                Videos
-a----      6/02/2019  8:23 a. m.              0 archivo.txt
-a----      6/02/2019  8:33 a. m.         121286 historia.txt


PS C:\Users\Usuario> Move-Item -Path .\historia.txt -Destination .\nuevodir
Move-Item : El proceso no puede obtener acceso al archivo porque está siendo utilizado en otro proceso.
En línea: 1 Carácter: 1
+ Move-Item -Path .\historia.txt -Destination .\nuevodir
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : WriteError: (C:\Users\Usuario\historia.txt:FileInfo) [Move-Item], IOException
    + FullyQualifiedErrorId : MoveFileInfoItemIOError,Microsoft.PowerShell.Commands.MoveItemCommand
Move-Item : El proceso no puede obtener acceso al archivo porque está siendo utilizado en otro proceso.
En línea: 1 Carácter: 1
+ Move-Item -Path .\historia.txt -Destination .\nuevodir
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : WriteError: (C:\Users\Usuario\historia.txt:FileInfo) [Move-Item], IOException
    + FullyQualifiedErrorId : MoveFileInfoItemIOError,Microsoft.PowerShell.Commands.MoveItemCommand

PS C:\Users\Usuario> Move-Item -Path .\archivo.txt -Destination .\nuevodir
PS C:\Users\Usuario> cd .\nuevodir
PS C:\Users\Usuario\nuevodir> ls


    Directorio: C:\Users\Usuario\nuevodir


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----      6/02/2019  8:23 a. m.              0 archivo.txt


PS C:\Users\Usuario\nuevodir> New-Item . "file" archivo2.txt "esto es una prueba"
>> ErrorTerminación(New-Item): "No se encuentra ningún parámetro de posición que acepte el argumento 'file'."
New-Item : No se encuentra ningún parámetro de posición que acepte el argumento 'file'.
En línea: 1 Carácter: 1
+ New-Item . "file" archivo2.txt "esto es una prueba"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [New-Item], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.NewItemCommand
New-Item : No se encuentra ningún parámetro de posición que acepte el argumento 'file'.
En línea: 1 Carácter: 1
+ New-Item . "file" archivo2.txt "esto es una prueba"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [New-Item], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.NewItemCommand

PS C:\Users\Usuario\nuevodir> New-Item -Path . -ItemType "file" -Name "archibo2.txt" -Value "cadena de ensayo"


    Directorio: C:\Users\Usuario\nuevodir


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----      6/02/2019  8:37 a. m.             16 archibo2.txt


PS C:\Users\Usuario\nuevodir> ls


    Directorio: C:\Users\Usuario\nuevodir


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----      6/02/2019  8:37 a. m.             16 archibo2.txt
-a----      6/02/2019  8:23 a. m.              0 archivo.txt


PS C:\Users\Usuario\nuevodir> Get-Content .\archibo2.txt
cadena de ensayo
PS C:\Users\Usuario\nuevodir> help Copy-Item -Full

NOMBRE
    Copy-Item

SINOPSIS
    Copies an item from one location to another.


SINTAXIS
    Copy-Item [[-Destination] <String>] [-Confirm] [-Container] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force]
    [-FromSession <PSSession>] [-Include <String[]>] -LiteralPath <String[]> [-PassThru] [-Recurse] [-ToSession <PSSession>] [-UseTransaction]
    [-WhatIf] [<CommonParameters>]

    Copy-Item [-Path] <String[]> [[-Destination] <String>] [-Confirm] [-Container] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter
    <String>] [-Force] [-FromSession <PSSession>] [-Include <String[]>] [-PassThru] [-Recurse] [-ToSession <PSSession>] [-UseTransaction] [-WhatIf]
    [<CommonParameters>]


DESCRIPCIÓN
    The Copy-Item cmdlet copies an item from one location to another location in the same namespace. For instance, it can copy a file to a folder,
    but it cannot copy a file to a certificate drive.

    This cmdlet does not cut or delete the items being copied. The particular items that the cmdlet can copy depend on the Windows PowerShell
    provider that exposes the item. For instance, it can copy files and directories in a file system drive and registry keys and entries in the
    registry drive.

    This cmdlet can copy and rename items in the same command. To rename an item, enter the new name in the value of the Destination parameter. To
    rename an item and not copy it, use the Rename-Item cmdlet.


PARÁMETROS
    -Confirm [<SwitchParameter>]
        Prompts you for confirmation before running the cmdlet.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Container [<SwitchParameter>]
        Indicates that this cmdlet preserves container objects during the copy operation.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Credential <PSCredential>
        Specifies a user account that has permission to perform this action. The default is the current user.

        Type a user name, such as User01 or Domain01\User01, or enter a PSCredential object, such as one generated by the Get-Credential cmdlet. If
        you type a user name, you will be prompted for a password.

        This parameter is not supported by any providers installed with Windows PowerShell.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       True (ByPropertyName)
        ¿Aceptar caracteres comodín? false

    -Destination <String>
        Specifies the path to the new location. To rename a copied item, include the new name in the value.

        ¿Requerido?                  false
        ¿Posición?                   1
        Valor predeterminado         None
        ¿Aceptar canalización?       True (ByPropertyName)
        ¿Aceptar caracteres comodín? false

    -Exclude <String[]>
        Specifies, as a string array, an item or items that this cmdlet excludes from the operation. Wildcards are permitted.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Filter <String>
        Specifies a filter in the provider's format or language. The value of this parameter qualifies the Path parameter. The syntax of the filter,
        including the use of wildcards, depends on the provider. Filters are more efficient than other parameters, because the provider applies them
        when the cmdlet gets the objects, rather than have Windows PowerShell filter the objects after they are retrieved.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Force [<SwitchParameter>]
        Indicates that this cmdlet will copy items that cannot otherwise be changed, such as copying over a read-only file or alias.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -FromSession <PSSession>
        Specifies the PSSession object from which a remote file is being copied. When you use this parameter, the Path and LiteralPath parameters
        refer to the local path on the remote machine.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Include <String[]>
        Specifies, as a string array, only those items upon which the cmdlet will act, excluding all others.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -LiteralPath <String[]>
        Specifies a path to the item. The value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as
        wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not
        to interpret any characters as escape sequences.

        ¿Requerido?                  true
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       True (ByPropertyName)
        ¿Aceptar caracteres comodín? false

    -PassThru [<SwitchParameter>]
        Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Path <String[]>
        Specifies, as a string array, the path to the items to copy.

        ¿Requerido?                  true
        ¿Posición?                   0
        Valor predeterminado         None
        ¿Aceptar canalización?       True (ByPropertyName, ByValue)
        ¿Aceptar caracteres comodín? false

    -Recurse [<SwitchParameter>]
        Indicates that this cmdlet performs a recursive copy.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -ToSession <PSSession>
        Specifies the PSSession object to which a remote file is being copied. When you use this parameter, the Path and LiteralPath parameters refer
        to the local path on the remote machine.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -UseTransaction [<SwitchParameter>]
        Includes the command in the active transaction. This parameter is valid only when a transaction is in progress. For more information, see
        Includes the command in the active transaction. This parameter is valid only when a transaction is in progress. For more information, see

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -WhatIf [<SwitchParameter>]
        Shows what would happen if the cmdlet runs. The cmdlet is not run.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    <CommonParameters>
        Este cmdlet admite los parámetros comunes: Verbose, Debug,
        ErrorAction, ErrorVariable, WarningAction, WarningVariable,
        OutBuffer, PipelineVariable y OutVariable. Para obtener más información, consulta
        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).

ENTRADAS
    System.String
        You can pipe a string that contains a path to this cmdlet.


SALIDAS
    None or an object representing the copied item.
        When you use the PassThru parameter, this cmdlet returns an object that represents the copied item. Otherwise, this cmdlet does not generate
        any output.


NOTAS


        * This cmdlet is similar to the cp or copy commands in other shells.

        This cmdlet is designed to work with the data exposed by any provider. To list the providers available in your session, type
        `Get-PsProvider`. For more information, see about_Providers.

        *

    Example 1: Copy a file to the specified directory

    PS C:\>Copy-Item "C:\Wabash\Logfiles\mar1604.log.txt" -Destination "C:\Presentation"

    This command copies the mar1604.log.txt file to the C:\Presentation directory. The command does not delete the original file.
    Example 2: Copy the contents of a directory to another directory

    PS C:\>Copy-Item "C:\Logfiles" -Destination "C:\Drawings" -Recurse

    This command copies the entire contents of the Logfiles directory into the Drawings directory. If the LogFiles directory contains files in
    subdirectories, those subdirectories will be copied with their file trees intact. The Container parameter is set to true by default. This
    preserves the directory structure.
    Example 3: Copy the contents of a directory to another directory and create the destination directory if it does not exist

    PS C:\>Copy-Item C:\Logfiles -Destination C:\Drawings\Logs -Recurse

    This command copies the contents of the C:\Logfiles directory to the C:\Drawings\Logs directory. It creates the \Logs subdirectory if it does not
    already exist.
    Example 4: Copy a file to the specified directory and rename the file

    PS C:\>Copy-Item "\\Server01\Share\Get-Widget.ps1" -Destination "\\Server12\ScriptArchive\Get-Widget.ps1.txt"

    This command uses the Copy-Item cmdlet to copy the Get-Widget.ps1 script from the \\Server01\Share directory to the \\Server12\ScriptArchive
    directory. As part of the copy operation, the command also changes the item name from Get-Widget.ps1 to Get-Widget.ps1.txt, so it can be attached
    to email messages.
    Example 5: Copy a file to a remote computer

    PS C:\>$Session = New-PSSession -ComputerName "Server01" -Credential "Contoso\PattiFul"
    PS C:\> Copy-Item "D:\Folder001\test.log" -Destination "C:\Folder001_Copy\" -ToSession $Session

    The first command creates a session to the remote computer named Server01 with the credential of Contoso\PattiFul and stores the results in the
    variable named $Session.

    The second command uses the Copy-Item cmdlet to copy test.log from the D:\Folder001 folder to the C:\Folder001_Copy folder on the remote computer
    using the session information stored in the $Session variable. This command does not delete the original file.
    Example 6: Copy the entire contents of a folder to a remote computer

    PS C:\>$Session = New-PSSession -ComputerName "Server02" -Credential "Contoso\PattiFul"
    PS C:\> Copy-Item "D:\Folder002\" -Destination "C:\Folder002_Copy\" -ToSession $Session

    The first command creates a session to the remote computer named Server01 with the credential of Contoso\PattiFul and stores the results in the
    variable named $Session.

    The second command uses the Copy-Item cmdlet to copy the entire contents from the D:\Folder002 folder to the C:\Folder002_Copy directory on the
    remote computer using the session information stored in the $Session variable. The subfolders will be copied with their file trees intact.
    Example 7: Recursively copy the entire contents of a folder to a remote computer

    PS C:\>$Session = New-PSSession -ComputerName "Server04" -Credential "Contoso\PattiFul"
    PS C:\> Copy-Item "D:\Folder003\" -Destination "C:\Folder003_Copy\" -ToSession $Session -Recurse

    The first command creates a session to the remote computer named Server01 with the credential of Contoso\PattiFul and stores the results in the
    variable named $Session.

    The second command uses the Copy-Item cmdlet to copy the entire contents from the D:\Folder003 folder to the C:\Folder003_Copy directory on the
    remote computer using the session information stored in the $Session variable. The subfolders will be copied with their file trees intact. Since
    this command uses the Recurse parameter, the operation will create the Folder003_Copy folder if it does not already exist.
    Example 8: Copy a file to a remote computer and then rename the file

    PS C:\>$Session = New-PSSession -ComputerName "Server04" -Credential "Contoso\PattiFul"
    PS C:\> Copy-Item "D:\Folder004\scriptingexample.ps1" -Destination "C:\Folder004_Copy\scriptingexample_copy.ps1" -ToSession $Session

    The first command creates a session to the remote computer named Server01 with the credential of Contoso\PattiFul and stores the results in the
    variable named $Session.

    The second command uses the Copy-Item cmdlet to copy scriptingexample.ps1 from the D:\Folder004 folder to the C:\Folder004_Copy folder on the
    remote computer using the session information stored in the $Session variable. As part of the copy operation, the command also changes the item
    name from scriptingexample.ps1 to scriptingexample_copy.ps1, so it can be attached to email messages. This command does not delete the original
    file.
    Example 9: Copy a remote file to the local computer

    PS C:\>$Session = New-PSSession -ComputerName "Server01" -Credential "Contoso\PattiFul"
    PS C:\> Copy-Item "C:\MyRemoteData\test.log" -Destination "D:\MyLocalData\" -FromSession $Session

    The first command creates a session to the remote computer named Server01 with the credential of Contoso\PattiFul and stores the results in the
    variable named $Session.

    The second command uses the Copy-Item cmdlet to copy test.log from the remote C:\MyRemoteData\ to the local D:\MyLocalData folder using the
    session information stored in the $Session variable. This command does not delete the original file.
    Example 10: Copy the entire contents of a remote folder to the local computer

    PS C:\>$Session = New-PSSession -ComputerName "Server01" -Credential "Contoso\PattiFul"
    PS C:\> Copy-Item "C:\MyRemoteData\scripts" -Destination "D:\MyLocalData\" -FromSession $Session

    The first command creates a session to the remote computer named Server01 with the credential of Contoso\PattiFul and stores the results in the
    variable named $Session.

    The second command uses the Copy-Item cmdlet to copy the entire contents from the remote C:\MyRemoteData\scripts folder to the local
    D:\MyLocalData folder using the session information stored in the $Session variable. If the scripts folder contains files in subfolders, those
    subfolders will be copied with their file trees intact.
    Example 11: Recursively copy the entire contents of a remote folder to the local computer

    PS C:\>$Session = New-PSSession -ComputerName "Server01" -Credential "Contoso\PattiFul"
    PS C:\> Copy-Item "C:\MyRemoteData\scripts" -Destination "D:\MyLocalData\scripts" -FromSession $Session

    The first command creates a session to the remote computer named Server01 with the credential of Contoso\PattiFul and stores the results in the
    variable named $Session.

    The second command uses the Copy-Item cmdlet to copy the entire contents from the remote C:\MyRemoteData\scripts folder to the local
    D:\MyLocalData\scripts folder using the session information stored in the $Session variable. Since this command uses the Recurse parameter, the
    operation will create the scripts folder if it does not already exist .If the scripts folder contains files in subfolders, those subfolders will
    be copied with their file trees intact.

VÍNCULOS RELACIONADOS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821574
    Clear-Item
    Get-Item
    Invoke-Item
    Move-Item
    New-Item
    Remove-Item
    Rename-Item
    Set-Item
    Get-PSProvider



PS C:\Users\Usuario\nuevodir> Copy-Item .\archibo2.txt -Destination .\archivo.txt
PS C:\Users\Usuario\nuevodir> ls


    Directorio: C:\Users\Usuario\nuevodir


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----      6/02/2019  8:37 a. m.             16 archibo2.txt
-a----      6/02/2019  8:37 a. m.             16 archivo.txt


PS C:\Users\Usuario\nuevodir> Get-Content -Path .\archivo.txt
cadena de ensayo
PS C:\Users\Usuario\nuevodir> Get-Content -Path .\archibo2.txt
cadena de ensayo
PS C:\Users\Usuario\nuevodir> help Set-ItemProperty

NOMBRE
    Set-ItemProperty

SINOPSIS
    Creates or changes the value of a property of an item.


SINTAXIS
    Set-ItemProperty [-Path] <String[]> [-Confirm] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include
    <String[]>] -InputObject <PSObject> [-PassThru] [-UseTransaction] [-WhatIf] [<CommonParameters>]

    Set-ItemProperty [-Confirm] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -InputObject
    <PSObject> -LiteralPath <String[]> [-PassThru] [-UseTransaction] [-WhatIf] [<CommonParameters>]

    Set-ItemProperty [-Name] <String> [-Value] <Object> [-Confirm] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force]
    [-Include <String[]>] -LiteralPath <String[]> [-PassThru] [-UseTransaction] [-WhatIf] [<CommonParameters>]

    Set-ItemProperty [-Path] <String[]> [-Name] <String> [-Value] <Object> [-Confirm] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter
    <String>] [-Force] [-Include <String[]>] [-PassThru] [-UseTransaction] [-WhatIf] [<CommonParameters>]


DESCRIPCIÓN
    The Set-ItemProperty cmdlet changes the value of the property of the specified item. You can use the cmdlet to establish or change the properties
    of items. For example, you can use Set-ItemProperty to set the value of the IsReadOnly property of a file object to $True.

    You also use Set-ItemProperty to create and change registry values and data. For example, you can add a new registry entry to a key and establish
    or change its value.


VÍNCULOS RELACIONADOS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821631
    Clear-ItemProperty
    Copy-ItemProperty
    Get-ItemProperty
    Move-ItemProperty
    New-ItemProperty
    Remove-ItemProperty
    Rename-ItemProperty

NOTAS
    Para ver los ejemplos, escriba: "get-help Set-ItemProperty -examples".
    Para obtener más información, escriba: "get-help Set-ItemProperty -detailed".
    Para obtener información técnica, escriba: "get-help Set-ItemProperty -full".
    Para obtener ayuda disponible en línea, escriba: "get-help Set-ItemProperty -online"


PS C:\Users\Usuario\nuevodir> Get-ItemProperty .\archibo2.txt


    Directorio: C:\Users\Usuario\nuevodir


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----      6/02/2019  8:37 a. m.             16 archibo2.txt


PS C:\Users\Usuario\nuevodir> Get-ItemProperty .


    Directorio: C:\Users\Usuario


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-----      6/02/2019  8:37 a. m.                nuevodir


PS C:\Users\Usuario\nuevodir> Get-ItemProperty 
>> ErrorTerminación(): "Se ha detenido la canalización."
>> ErrorTerminación(): "Se ha detenido la canalización."
PS C:\Users\Usuario\nuevodir> Get-ItemProperty .\archibo2.txt


    Directorio: C:\Users\Usuario\nuevodir


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----      6/02/2019  8:37 a. m.             16 archibo2.txt


PS C:\Users\Usuario\nuevodir> Get-ItemProperty .\archibo2.txt Set-ItemProperty 
Get-ItemProperty : La propiedad Set-ItemProperty no existe o no se encuentra.
En línea: 1 Carácter: 1
+ Get-ItemProperty .\archibo2.txt Set-ItemProperty
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ReadError: (Set-ItemProperty:String) [Get-ItemProperty], IOException
    + FullyQualifiedErrorId : GetValueError,Microsoft.PowerShell.Commands.GetItemPropertyCommand
Get-ItemProperty : La propiedad Set-ItemProperty no existe o no se encuentra.
En línea: 1 Carácter: 1
+ Get-ItemProperty .\archibo2.txt Set-ItemProperty
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ReadError: (Set-ItemProperty:String) [Get-ItemProperty], IOException
    + FullyQualifiedErrorId : GetValueError,Microsoft.PowerShell.Commands.GetItemPropertyCommand

PS C:\Users\Usuario\nuevodir> Get-ItemProperty -Path .\archibo2.txt -Name creationTime


creationTime : 6/02/2019 8:37:48 a. m.
PSPath       : Microsoft.PowerShell.Core\FileSystem::C:\Users\Usuario\nuevodir\archibo2.txt
PSParentPath : Microsoft.PowerShell.Core\FileSystem::C:\Users\Usuario\nuevodir
PSChildName  : archibo2.txt
PSDrive      : C
PSProvider   : Microsoft.PowerShell.Core\FileSystem



PS C:\Users\Usuario\nuevodir> Get-ItemProperty -Path .\archibo2.txt -Name lenght
Get-ItemProperty : La propiedad lenght no existe o no se encuentra.
En línea: 1 Carácter: 1
+ Get-ItemProperty -Path .\archibo2.txt -Name lenght
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ReadError: (lenght:String) [Get-ItemProperty], IOException
    + FullyQualifiedErrorId : GetValueError,Microsoft.PowerShell.Commands.GetItemPropertyCommand
Get-ItemProperty : La propiedad lenght no existe o no se encuentra.
En línea: 1 Carácter: 1
+ Get-ItemProperty -Path .\archibo2.txt -Name lenght
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ReadError: (lenght:String) [Get-ItemProperty], IOException
    + FullyQualifiedErrorId : GetValueError,Microsoft.PowerShell.Commands.GetItemPropertyCommand

PS C:\Users\Usuario\nuevodir> Get-ItemProperty -Path .\archibo2.txt -Name length


length       : 16
PSPath       : Microsoft.PowerShell.Core\FileSystem::C:\Users\Usuario\nuevodir\archibo2.txt
PSParentPath : Microsoft.PowerShell.Core\FileSystem::C:\Users\Usuario\nuevodir
PSChildName  : archibo2.txt
PSDrive      : C
PSProvider   : Microsoft.PowerShell.Core\FileSystem



PS C:\Users\Usuario\nuevodir> Get-ItemProperty -Path .\archibo2.txt -Name attributes


attributes   : Archive
PSPath       : Microsoft.PowerShell.Core\FileSystem::C:\Users\Usuario\nuevodir\archibo2.txt
PSParentPath : Microsoft.PowerShell.Core\FileSystem::C:\Users\Usuario\nuevodir
PSChildName  : archibo2.txt
PSDrive      : C
PSProvider   : Microsoft.PowerShell.Core\FileSystem



PS C:\Users\Usuario\nuevodir> Get-ItemProperty -Path .\archibo2.txt -Name isreadonly


isreadonly   : False
PSPath       : Microsoft.PowerShell.Core\FileSystem::C:\Users\Usuario\nuevodir\archibo2.txt
PSParentPath : Microsoft.PowerShell.Core\FileSystem::C:\Users\Usuario\nuevodir
PSChildName  : archibo2.txt
PSDrive      : C
PSProvider   : Microsoft.PowerShell.Core\FileSystem



PS C:\Users\Usuario\nuevodir> Get-ItemProperty -Name
>> ErrorTerminación(Get-ItemProperty): "Falta un argumento para el parámetro 'Name'. Especifique un parámetro del tipo 'System.String[]' e inténtelo de nuevo."
Get-ItemProperty : Falta un argumento para el parámetro 'Name'. Especifique un parámetro del tipo 'System.String[]' e 
inténtelo de nuevo.
En línea: 1 Carácter: 18
+ Get-ItemProperty -Name
+                  ~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Get-ItemProperty], ParameterBindingException
    + FullyQualifiedErrorId : MissingArgument,Microsoft.PowerShell.Commands.GetItemPropertyCommand
Get-ItemProperty : Falta un argumento para el parámetro 'Name'. Especifique un parámetro del tipo 'System.String[]' e inténtelo de nuevo.
En línea: 1 Carácter: 18
+ Get-ItemProperty -Name
+                  ~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Get-ItemProperty], ParameterBindingException
    + FullyQualifiedErrorId : MissingArgument,Microsoft.PowerShell.Commands.GetItemPropertyCommand

PS C:\Users\Usuario\nuevodir> Get-ItemProperty -Name *
>> ErrorTerminación(): "Se ha detenido la canalización."
>> ErrorTerminación(): "Se ha detenido la canalización."
PS C:\Users\Usuario\nuevodir> Set-ItemProperty -Path .\archibo2.txt -Name isredonline -Value true
Set-ItemProperty : La propiedad string isredonline=true no existe o no se encuentra.
En línea: 1 Carácter: 1
+ Set-ItemProperty -Path .\archibo2.txt -Name isredonline -Value true
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ReadError: (string isredonline=true:PSNoteProperty) [Set-ItemProperty], IOException
    + FullyQualifiedErrorId : SetPropertyError,Microsoft.PowerShell.Commands.SetItemPropertyCommand
Set-ItemProperty : La propiedad string isredonline=true no existe o no se encuentra.
En línea: 1 Carácter: 1
+ Set-ItemProperty -Path .\archibo2.txt -Name isredonline -Value true
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ReadError: (string isredonline=true:PSNoteProperty) [Set-ItemProperty], IOException
    + FullyQualifiedErrorId : SetPropertyError,Microsoft.PowerShell.Commands.SetItemPropertyCommand

PS C:\Users\Usuario\nuevodir> Set-ItemProperty -Path .\archibo2.txt -Name isreadonly -Value true
PS C:\Users\Usuario\nuevodir> Get-ItemProperty -Path .\archibo2.txt -Name isreadonly


isreadonly   : True
PSPath       : Microsoft.PowerShell.Core\FileSystem::C:\Users\Usuario\nuevodir\archibo2.txt
PSParentPath : Microsoft.PowerShell.Core\FileSystem::C:\Users\Usuario\nuevodir
PSChildName  : archibo2.txt
PSDrive      : C
PSProvider   : Microsoft.PowerShell.Core\FileSystem



PS C:\Users\Usuario\nuevodir> Get-ItemProperty
>> ErrorTerminación(): "Se ha detenido la canalización."
>> ErrorTerminación(): "Se ha detenido la canalización."
PS C:\Users\Usuario\nuevodir> Get-ItemProperty *


    Directorio: C:\Users\Usuario\nuevodir


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-ar---      6/02/2019  8:37 a. m.             16 archibo2.txt
-a----      6/02/2019  8:37 a. m.             16 archivo.txt


PS C:\Users\Usuario\nuevodir> help properties

Name                              Category  Module                    Synopsis
----                              --------  ------                    --------
Get-LogProperties                 Function  PSDiagnostics             ...
Set-LogProperties                 Function  PSDiagnostics             ...
Get-DedupProperties               Function  Storage                   ...
about_Properties                  HelpFile                            Describes how to use object properties in Windows PowerShell.


PS C:\Users\Usuario\nuevodir> rm .\archibo2.txt
rm : No se puede quitar el elemento C:\Users\Usuario\nuevodir\archibo2.txt: No dispone de permisos suficientes para 
realizar esta operación.
En línea: 1 Carácter: 1
+ rm .\archibo2.txt
+ ~~~~~~~~~~~~~~~~~
    + CategoryInfo          : PermissionDenied: (C:\Users\Usuario\nuevodir\archibo2.txt:FileInfo) [Remove-Item], 
IOException
    + FullyQualifiedErrorId : RemoveFileSystemItemUnAuthorizedAccess,Microsoft.PowerShell.Commands.RemoveItemCommand
rm : No se puede quitar el elemento C:\Users\Usuario\nuevodir\archibo2.txt: No dispone de permisos suficientes para realizar esta operación.
En línea: 1 Carácter: 1
+ rm .\archibo2.txt
+ ~~~~~~~~~~~~~~~~~
    + CategoryInfo          : PermissionDenied: (C:\Users\Usuario\nuevodir\archibo2.txt:FileInfo) [Remove-Item], IOException
    + FullyQualifiedErrorId : RemoveFileSystemItemUnAuthorizedAccess,Microsoft.PowerShell.Commands.RemoveItemCommand
PS C:\Users\Usuario\nuevodir> Get-ItemProperty -Path .\archibo2.txt | Get-Member


   TypeName: System.IO.FileInfo

Name                      MemberType     Definition
----                      ----------     ----------
LinkType                  CodeProperty   System.String LinkType{get=GetLinkType;}
Mode                      CodeProperty   System.String Mode{get=Mode;}
Target                    CodeProperty   System.Collections.Generic.IEnumerable`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, Publi...
AppendText                Method         System.IO.StreamWriter AppendText()
CopyTo                    Method         System.IO.FileInfo CopyTo(string destFileName), System.IO.FileInfo CopyTo(string destFileName, bool overwr...
Create                    Method         System.IO.FileStream Create()
CreateObjRef              Method         System.Runtime.Remoting.ObjRef CreateObjRef(type requestedType)
CreateText                Method         System.IO.StreamWriter CreateText()
Decrypt                   Method         void Decrypt()
Delete                    Method         void Delete()
Encrypt                   Method         void Encrypt()
Equals                    Method         bool Equals(System.Object obj)
GetAccessControl          Method         System.Security.AccessControl.FileSecurity GetAccessControl(), System.Security.AccessControl.FileSecurity ...
GetHashCode               Method         int GetHashCode()
GetLifetimeService        Method         System.Object GetLifetimeService()
GetObjectData             Method         void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.Strea...
GetType                   Method         type GetType()
InitializeLifetimeService Method         System.Object InitializeLifetimeService()
MoveTo                    Method         void MoveTo(string destFileName)
Open                      Method         System.IO.FileStream Open(System.IO.FileMode mode), System.IO.FileStream Open(System.IO.FileMode mode, Sys...
OpenRead                  Method         System.IO.FileStream OpenRead()
OpenText                  Method         System.IO.StreamReader OpenText()
OpenWrite                 Method         System.IO.FileStream OpenWrite()
Refresh                   Method         void Refresh()
Replace                   Method         System.IO.FileInfo Replace(string destinationFileName, string destinationBackupFileName), System.IO.FileIn...
SetAccessControl          Method         void SetAccessControl(System.Security.AccessControl.FileSecurity fileSecurity)
ToString                  Method         string ToString()
PSChildName               NoteProperty   string PSChildName=archibo2.txt
PSDrive                   NoteProperty   PSDriveInfo PSDrive=C
PSParentPath              NoteProperty   string PSParentPath=Microsoft.PowerShell.Core\FileSystem::C:\Users\Usuario\nuevodir
PSPath                    NoteProperty   string PSPath=Microsoft.PowerShell.Core\FileSystem::C:\Users\Usuario\nuevodir\archibo2.txt
PSProvider                NoteProperty   ProviderInfo PSProvider=Microsoft.PowerShell.Core\FileSystem
Attributes                Property       System.IO.FileAttributes Attributes {get;set;}
CreationTime              Property       datetime CreationTime {get;set;}
CreationTimeUtc           Property       datetime CreationTimeUtc {get;set;}
Directory                 Property       System.IO.DirectoryInfo Directory {get;}
DirectoryName             Property       string DirectoryName {get;}
Exists                    Property       bool Exists {get;}
Extension                 Property       string Extension {get;}
FullName                  Property       string FullName {get;}
IsReadOnly                Property       bool IsReadOnly {get;set;}
LastAccessTime            Property       datetime LastAccessTime {get;set;}
LastAccessTimeUtc         Property       datetime LastAccessTimeUtc {get;set;}
LastWriteTime             Property       datetime LastWriteTime {get;set;}
LastWriteTimeUtc          Property       datetime LastWriteTimeUtc {get;set;}
Length                    Property       long Length {get;}
Name                      Property       string Name {get;}
BaseName                  ScriptProperty System.Object BaseName {get=if ($this.Extension.Length -gt 0){$this.Name.Remove($this.Name.Length - $this....
VersionInfo               ScriptProperty System.Object VersionInfo {get=[System.Diagnostics.FileVersionInfo]::GetVersionInfo($this.FullName);}


PS C:\Users\Usuario\nuevodir> Get-Process

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
    241       8     3100       2928       0,19   3132   1 ApplicationFrameHost
    469      16    17688      41724       8,39    428   1 chrome
   1052      29    40160      81276      13,58   4164   1 chrome
    148       6     1476       6984       0,03   5340   1 chrome
    383      19    43416     194024      10,13   6660   1 chrome
    173       6     1508       6460       0,06   7996   1 chrome
    119       4     5436        432       0,02   2556   1 conhost
    332       7     1152       1312               408   0 csrss
    376      13     1276       1640               488   1 csrss
    421       9     3848       6500       2,44   3848   1 ctfmon
    233       9     2888       6088       0,27   2412   1 dllhost
    251       8     2756       3552              2664   0 dllhost
    831      33    54172      57024               944   1 dwm
   2243      49    54692      64940      28,77   3996   1 explorer
     49       8     5712       2956               768   1 fontdrvhost
     49       4     1212        192               776   0 fontdrvhost
      0       0       40          4                 0   0 Idle
    490      13     7140       2296       1,66   4176   1 LockApp
   1163      13     4728       8580               648   0 lsass
      0       0      564      51336              1564   0 Memory Compression
    660      14    60132       6316       0,34   7736   1 Microsoft.Photos
    219       7     2484       1052              3120   0 msdtc
   1106      37   137304      41816              2840   0 MsMpEng
    195       6     4532       2492              7248   0 NisSrv
    248       8     2084       5904       0,17   7864   1 notepad
    622      22    30716       7488       1,06   7756   1 OneDrive
    809      35   174984     157936     131,22   5308   1 powershell_ise
      0       4     2464      18496                88   0 Registry
    264       8     3460       8084       0,23    564   1 RuntimeBroker
    240       7     2140       4884       1,45   4356   1 RuntimeBroker
    308       9     3388       7116       0,61   4476   1 RuntimeBroker
    257       7     1932      10908       0,06   4608   1 RuntimeBroker
    588      14     9096      17748       4,09   4764   1 RuntimeBroker
    257       8     2428       7608       0,75   5972   1 RuntimeBroker
    138       5     1488       2772       0,05   5992   1 RuntimeBroker
    690      24    19616      17848              5900   0 SearchIndexer
   1384      46    80876      46876      14,06   5940   1 SearchUI
    411       9     3492       6992              6260   0 SecurityHealthService
    151       5     1288       2220       0,08   6204   1 SecurityHealthSystray
    347       6     2804       3632               628   0 services
    868      20    16544        592       0,92   5788   1 ShellExperienceHost
    548      10     4780      13436      10,78   3352   1 sihost
   1152      40   100936       1284      19,61   4340   1 SkypeApp
    143       4     1456          4       0,05   6692   1 SkypeBackgroundHost
    394      12     7436       6700       0,20   4104   1 smartscreen
     53       2      316        104               280   0 smss
    544      17     8220       5512              1952   0 spoolsv
    407      25     6524       7740               256   0 svchost
    189       6     4748      10116               324   0 svchost
    204       6     3600      10636               392   0 svchost
    955      13     6996      13916               744   0 svchost
    933      10     4744       7608               868   0 svchost
   2468      46   177256      33456              1020   0 svchost
    650      19    33728      30940              1064   0 svchost
    672      12    13016      14636              1096   0 svchost
    227       7     1848       3040              1196   0 svchost
   1174      28    10716      10924              1400   0 svchost
    410      10    11204       9140              1476   0 svchost
    692      68     9064      10344              1632   0 svchost
    326       7     2276       7076              1744   0 svchost
    335       8     1688       3100              1824   0 svchost
    130       6     1168       2004              1832   0 svchost
    763      12    11488      16016              2100   0 svchost
    212       7     1432       2284              2844   0 svchost
    217       6     1736       4516              3184   0 svchost
    869      21     9608      15840       2,52   3504   1 svchost
    213       9     1584       2960              5028   0 svchost
    252       7     2108       8316       0,09   5108   1 svchost
   2324       0       60          8                 4   0 System
    461      13     7168       6664       2,77   2088   1 taskhostw
    321      18     5668      10536       0,59   3584   1 taskhostw
    236       8     2648       6040       0,88   4040   1 TPAutoConnect
    229       7     2024       2488              2620   0 TPAutoConnSvc
    176       7     3688       1128              2080   0 VGAuthService
    123       4     1220        528              1332   0 vmacthlp
    320      13     4740       7708              2108   0 vmtoolsd
    372      13     8604       8000      19,73   6220   1 vmtoolsd
    831      16    10160        820       0,28   6516   1 WindowsInternal.ComposableShell.Experiences.TextInput.InputApp
    166       6     1004        424               496   0 wininit
    268       7     2208       2476               552   1 winlogon
    370      10    11772      11928              3460   0 WmiPrvSE
    369      10     5856       1344       0,20   6552   1 YourPhone


PS C:\Users\Usuario\nuevodir> Get-Process | Get-Member


   TypeName: System.Diagnostics.Process

Name                       MemberType     Definition
----                       ----------     ----------
Handles                    AliasProperty  Handles = Handlecount
Name                       AliasProperty  Name = ProcessName
NPM                        AliasProperty  NPM = NonpagedSystemMemorySize64
PM                         AliasProperty  PM = PagedMemorySize64
SI                         AliasProperty  SI = SessionId
VM                         AliasProperty  VM = VirtualMemorySize64
WS                         AliasProperty  WS = WorkingSet64
Disposed                   Event          System.EventHandler Disposed(System.Object, System.EventArgs)
ErrorDataReceived          Event          System.Diagnostics.DataReceivedEventHandler ErrorDataReceived(System.Object, System.Diagnostics.DataRecei...
Exited                     Event          System.EventHandler Exited(System.Object, System.EventArgs)
OutputDataReceived         Event          System.Diagnostics.DataReceivedEventHandler OutputDataReceived(System.Object, System.Diagnostics.DataRece...
BeginErrorReadLine         Method         void BeginErrorReadLine()
BeginOutputReadLine        Method         void BeginOutputReadLine()
CancelErrorRead            Method         void CancelErrorRead()
CancelOutputRead           Method         void CancelOutputRead()
Close                      Method         void Close()
CloseMainWindow            Method         bool CloseMainWindow()
CreateObjRef               Method         System.Runtime.Remoting.ObjRef CreateObjRef(type requestedType)
Dispose                    Method         void Dispose(), void IDisposable.Dispose()
Equals                     Method         bool Equals(System.Object obj)
GetHashCode                Method         int GetHashCode()
GetLifetimeService         Method         System.Object GetLifetimeService()
GetType                    Method         type GetType()
InitializeLifetimeService  Method         System.Object InitializeLifetimeService()
Kill                       Method         void Kill()
Refresh                    Method         void Refresh()
Start                      Method         bool Start()
ToString                   Method         string ToString()
WaitForExit                Method         bool WaitForExit(int milliseconds), void WaitForExit()
WaitForInputIdle           Method         bool WaitForInputIdle(int milliseconds), bool WaitForInputIdle()
__NounName                 NoteProperty   string __NounName=Process
BasePriority               Property       int BasePriority {get;}
Container                  Property       System.ComponentModel.IContainer Container {get;}
EnableRaisingEvents        Property       bool EnableRaisingEvents {get;set;}
ExitCode                   Property       int ExitCode {get;}
ExitTime                   Property       datetime ExitTime {get;}
Handle                     Property       System.IntPtr Handle {get;}
HandleCount                Property       int HandleCount {get;}
HasExited                  Property       bool HasExited {get;}
Id                         Property       int Id {get;}
MachineName                Property       string MachineName {get;}
MainModule                 Property       System.Diagnostics.ProcessModule MainModule {get;}
MainWindowHandle           Property       System.IntPtr MainWindowHandle {get;}
MainWindowTitle            Property       string MainWindowTitle {get;}
MaxWorkingSet              Property       System.IntPtr MaxWorkingSet {get;set;}
MinWorkingSet              Property       System.IntPtr MinWorkingSet {get;set;}
Modules                    Property       System.Diagnostics.ProcessModuleCollection Modules {get;}
NonpagedSystemMemorySize   Property       int NonpagedSystemMemorySize {get;}
NonpagedSystemMemorySize64 Property       long NonpagedSystemMemorySize64 {get;}
PagedMemorySize            Property       int PagedMemorySize {get;}
PagedMemorySize64          Property       long PagedMemorySize64 {get;}
PagedSystemMemorySize      Property       int PagedSystemMemorySize {get;}
PagedSystemMemorySize64    Property       long PagedSystemMemorySize64 {get;}
PeakPagedMemorySize        Property       int PeakPagedMemorySize {get;}
PeakPagedMemorySize64      Property       long PeakPagedMemorySize64 {get;}
PeakVirtualMemorySize      Property       int PeakVirtualMemorySize {get;}
PeakVirtualMemorySize64    Property       long PeakVirtualMemorySize64 {get;}
PeakWorkingSet             Property       int PeakWorkingSet {get;}
PeakWorkingSet64           Property       long PeakWorkingSet64 {get;}
PriorityBoostEnabled       Property       bool PriorityBoostEnabled {get;set;}
PriorityClass              Property       System.Diagnostics.ProcessPriorityClass PriorityClass {get;set;}
PrivateMemorySize          Property       int PrivateMemorySize {get;}
PrivateMemorySize64        Property       long PrivateMemorySize64 {get;}
PrivilegedProcessorTime    Property       timespan PrivilegedProcessorTime {get;}
ProcessName                Property       string ProcessName {get;}
ProcessorAffinity          Property       System.IntPtr ProcessorAffinity {get;set;}
Responding                 Property       bool Responding {get;}
SafeHandle                 Property       Microsoft.Win32.SafeHandles.SafeProcessHandle SafeHandle {get;}
SessionId                  Property       int SessionId {get;}
Site                       Property       System.ComponentModel.ISite Site {get;set;}
StandardError              Property       System.IO.StreamReader StandardError {get;}
StandardInput              Property       System.IO.StreamWriter StandardInput {get;}
StandardOutput             Property       System.IO.StreamReader StandardOutput {get;}
StartInfo                  Property       System.Diagnostics.ProcessStartInfo StartInfo {get;set;}
StartTime                  Property       datetime StartTime {get;}
SynchronizingObject        Property       System.ComponentModel.ISynchronizeInvoke SynchronizingObject {get;set;}
Threads                    Property       System.Diagnostics.ProcessThreadCollection Threads {get;}
TotalProcessorTime         Property       timespan TotalProcessorTime {get;}
UserProcessorTime          Property       timespan UserProcessorTime {get;}
VirtualMemorySize          Property       int VirtualMemorySize {get;}
VirtualMemorySize64        Property       long VirtualMemorySize64 {get;}
WorkingSet                 Property       int WorkingSet {get;}
WorkingSet64               Property       long WorkingSet64 {get;}
PSConfiguration            PropertySet    PSConfiguration {Name, Id, PriorityClass, FileVersion}
PSResources                PropertySet    PSResources {Name, Id, Handlecount, WorkingSet, NonPagedMemorySize, PagedMemorySize, PrivateMemorySize, V...
Company                    ScriptProperty System.Object Company {get=$this.Mainmodule.FileVersionInfo.CompanyName;}
CPU                        ScriptProperty System.Object CPU {get=$this.TotalProcessorTime.TotalSeconds;}
Description                ScriptProperty System.Object Description {get=$this.Mainmodule.FileVersionInfo.FileDescription;}
FileVersion                ScriptProperty System.Object FileVersion {get=$this.Mainmodule.FileVersionInfo.FileVersion;}
Path                       ScriptProperty System.Object Path {get=$this.Mainmodule.FileName;}
Product                    ScriptProperty System.Object Product {get=$this.Mainmodule.FileVersionInfo.ProductName;}
ProductVersion             ScriptProperty System.Object ProductVersion {get=$this.Mainmodule.FileVersionInfo.ProductVersion;}


PS C:\Users\Usuario\nuevodir> help sort

NOMBRE
    Sort-Object

SINOPSIS
    Sorts objects by property values.


SINTAXIS
    Sort-Object [[-Property] <Object[]>] [-CaseSensitive] [-Culture <String>] [-Descending] [-InputObject <PSObject>] [-Unique] [<CommonParameters>]


DESCRIPCIÓN
    The Sort-Object cmdlet sorts objects in ascending or descending order based on the values of properties of the object.

    You can specify a single property or multiple properties, for a multi-key sort, and you can select a case-sensitive or case-insensitive sort. You
    can also direct Sort-Object to display only the objects with a unique value for a particular property.


VÍNCULOS RELACIONADOS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821863
    Compare-Object
    Group-Object
    Measure-Object
    New-Object
    Select-Object
    Tee-Object

NOTAS
    Para ver los ejemplos, escriba: "get-help Sort-Object -examples".
    Para obtener más información, escriba: "get-help Sort-Object -detailed".
    Para obtener información técnica, escriba: "get-help Sort-Object -full".
    Para obtener ayuda disponible en línea, escriba: "get-help Sort-Object -online"


PS C:\Users\Usuario\nuevodir> help Sort-Object

NOMBRE
    Sort-Object

SINOPSIS
    Sorts objects by property values.


SINTAXIS
    Sort-Object [[-Property] <Object[]>] [-CaseSensitive] [-Culture <String>] [-Descending] [-InputObject <PSObject>] [-Unique] [<CommonParameters>]


DESCRIPCIÓN
    The Sort-Object cmdlet sorts objects in ascending or descending order based on the values of properties of the object.

    You can specify a single property or multiple properties, for a multi-key sort, and you can select a case-sensitive or case-insensitive sort. You
    can also direct Sort-Object to display only the objects with a unique value for a particular property.


VÍNCULOS RELACIONADOS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821863
    Compare-Object
    Group-Object
    Measure-Object
    New-Object
    Select-Object
    Tee-Object

NOTAS
    Para ver los ejemplos, escriba: "get-help Sort-Object -examples".
    Para obtener más información, escriba: "get-help Sort-Object -detailed".
    Para obtener información técnica, escriba: "get-help Sort-Object -full".
    Para obtener ayuda disponible en línea, escriba: "get-help Sort-Object -online"


PS C:\Users\Usuario\nuevodir> Get-Process | Sort-Object -Property id

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
      0       0       40          4                 0   0 Idle
   2369       0       60          8                 4   0 System
      0       4      980      17584                88   0 Registry
    411      25     6672       7780               256   0 svchost
     53       2      316        104               280   0 smss
    187       6     4308       9572               324   0 svchost
    331       7     1152       1228               408   0 csrss
    469      16    17688      41112       8,39    428   1 chrome
    385      13     1276       1640               488   1 csrss
    166       6     1004        424               496   0 wininit
    268       7     2136       2396               552   1 winlogon
    270       9     3552       8332       0,23    564   1 RuntimeBroker
    349       6     2844       3644               628   0 services
   1166      13     4768       8488               648   0 lsass
    966      13     7084      13864               744   0 svchost
     49       8     5712       2832               768   1 fontdrvhost
     49       4     1212        192               776   0 fontdrvhost
    943      10     4784       7572               868   0 svchost
    829      33    54152      54688               944   1 dwm
   2437      45   176712      32880              1020   0 svchost
    650      18    33268      30004              1064   0 svchost
    680      12    13068      14508              1096   0 svchost
    227       7     1848       3040              1196   0 svchost
    123       4     1220        528              1332   0 vmacthlp
   1180      29    10860      10904              1400   0 svchost
    410      10    11472       9120              1476   0 svchost
      0       0      568      73532              1564   0 Memory Compression
    693      68     9036      10220              1632   0 svchost
    319       7     2132       7024              1744   0 svchost
    335       8     1688       3088              1824   0 svchost
    130       6     1168       2004              1832   0 svchost
    546      18     8264       5524              1952   0 spoolsv
    176       7     3688       1128              2080   0 VGAuthService
    461      13     7168       6000       2,77   2088   1 taskhostw
    763      12    11504      15704              2100   0 svchost
    318      13     4740       7572              2108   0 vmtoolsd
    313       9     5428      17292       0,17   2248   1 RuntimeBroker
    233       9     2888       6076       0,27   2412   1 dllhost
    119       4     5436        432       0,02   2556   1 conhost
    227       7     2024       2488              2620   0 TPAutoConnSvc
    251       8     2756       3552              2664   0 dllhost
   1111      37   137984      43804              2840   0 MsMpEng
    212       7     1432       2284              2844   0 svchost
    219       7     2484       1052              3120   0 msdtc
    241       8     3100       2760       0,19   3132   1 ApplicationFrameHost
    217       7     1784       4524              3184   0 svchost
    552      10     4816      13272      10,78   3352   1 sihost
    364      10    10980      11312              3460   0 WmiPrvSE
    858      21     9564      15704       2,52   3504   1 svchost
    329      18     5736      10532       0,59   3584   1 taskhostw
    421       9     3848       5776       2,44   3848   1 ctfmon
   2253      49    54408      63208      28,83   3996   1 explorer
    236       8     2500       6080       0,88   4040   1 TPAutoConnect
    394      12     7408       6672       0,20   4104   1 smartscreen
   1071      30    40296      68916      13,59   4164   1 chrome
    490      13     7140       2296       1,66   4176   1 LockApp
   1152      40   100936       1284      19,61   4340   1 SkypeApp
    240       7     2140       4884       1,45   4356   1 RuntimeBroker
    308       9     3456       6792       0,61   4476   1 RuntimeBroker
    257       7     1932      10896       0,06   4608   1 RuntimeBroker
    588      14     9096      16556       4,09   4764   1 RuntimeBroker
    213       9     1628       2968              5028   0 svchost
    251       7     2156       8320       0,09   5108   1 svchost
    307      10    10900      12404       0,11   5120   1 backgroundTaskHost
    894      35   172864     150304     138,19   5308   1 powershell_ise
    148       6     1476       6972       0,03   5340   1 chrome
    868      20    16544        592       0,92   5788   1 ShellExperienceHost
    695      24    19680      17872              5900   0 SearchIndexer
   1384      46    80876      46876      14,06   5940   1 SearchUI
    257       8     2496       7616       0,75   5972   1 RuntimeBroker
    138       5     1488       2772       0,05   5992   1 RuntimeBroker
    151       5     1288       2220       0,08   6204   1 SecurityHealthSystray
    372      13     8604       7896      19,88   6220   1 vmtoolsd
    411       9     3492       6900              6260   0 SecurityHealthService
    831      16    10160        820       0,28   6516   1 WindowsInternal.ComposableShell.Experiences.TextInput.InputApp
    369      10     5856       1344       0,20   6552   1 YourPhone
    383      19    43416     176208      10,13   6660   1 chrome
    143       4     1456          4       0,05   6692   1 SkypeBackgroundHost
    122       4     1840       6004              6988   0 svchost
    195       6     4532       2492              7248   0 NisSrv
    660      14    60132       6316       0,34   7736   1 Microsoft.Photos
    622      22    30716       7472       1,06   7756   1 OneDrive
    248       8     2084       5564       0,17   7864   1 notepad
    173       6     1508       6436       0,06   7996   1 chrome


PS C:\Users\Usuario\nuevodir> help transcript

Name                              Category  Module                    Synopsis
----                              --------  ------                    --------
Start-Transcript                  Cmdlet    Microsoft.PowerShell.Host Creates a record of all or part of a Windows PowerShell session to a text file.
Stop-Transcript                   Cmdlet    Microsoft.PowerShell.Host Stops a transcript.


PS C:\Users\Usuario\nuevodir> help Sort-Object -Full

NOMBRE
    Sort-Object

SINOPSIS
    Sorts objects by property values.


SINTAXIS
    Sort-Object [[-Property] <Object[]>] [-CaseSensitive] [-Culture <String>] [-Descending] [-InputObject <PSObject>] [-Unique] [<CommonParameters>]


DESCRIPCIÓN
    The Sort-Object cmdlet sorts objects in ascending or descending order based on the values of properties of the object.

    You can specify a single property or multiple properties, for a multi-key sort, and you can select a case-sensitive or case-insensitive sort. You
    can also direct Sort-Object to display only the objects with a unique value for a particular property.


PARÁMETROS
    -CaseSensitive [<SwitchParameter>]
        Indicates that the sort should be case sensitive. By default, sorting is not case sensitive.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Culture <String>
        Specifies the cultural configuration to use when sorting.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Descending [<SwitchParameter>]
        Indicates that the cmdlet sorts the objects in descending order. The default is ascending order.

        The Descending parameter applies to all properties. To sort by some properties in ascending order and others in descending order, you must
        specify their property values by using a hash table.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -InputObject <PSObject>
        Specifies the objects to sort.

        When you use the InputObject parameter to submit a collection of items, Sort-Object receives one object that represents the collection.
        Because one object cannot be sorted, Sort-Object returns the entire collection unchanged.

        To sort objects, pipe them to Sort-Object .

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         None
        ¿Aceptar canalización?       True (ByValue)
        ¿Aceptar caracteres comodín? false

    -Property <Object[]>
        Specifies the properties to use when sorting. Objects are sorted based on the values of these properties. Enter the names of the properties.
        Wildcards are permitted.

        If you specify multiple properties, the objects are first sorted by the first property. If more than one object has the same value for the
        first property, those objects are sorted by the second property. This process continues until there are no more specified properties or no
        groups of objects.

        If you do not specify properties, the cmdlet sorts based on default properties for the object type.

        The value of the Property parameter can be a calculated property. To create a calculated, property, use a hash table. Valid keys are:

        - Expression <string> or <script block>

        - Ascending <Boolean>

        - Descending <Boolean>

        ¿Requerido?                  false
        ¿Posición?                   0
        Valor predeterminado         None
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    -Unique [<SwitchParameter>]
        Indicates that the cmdlet eliminates duplicates and returns only the unique members of the collection. You can use this parameter instead of
        using the Get-Unique cmdlet.

        This parameter is case-insensitive. As a result, strings that differ only in character casing are considered to be the same.

        ¿Requerido?                  false
        ¿Posición?                   named
        Valor predeterminado         False
        ¿Aceptar canalización?       False
        ¿Aceptar caracteres comodín? false

    <CommonParameters>
        Este cmdlet admite los parámetros comunes: Verbose, Debug,
        ErrorAction, ErrorVariable, WarningAction, WarningVariable,
        OutBuffer, PipelineVariable y OutVariable. Para obtener más información, consulta
        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).

ENTRADAS
    System.Management.Automation.PSObject
        You can pipe the objects to be sorted to Sort-Object .


SALIDAS
    System.Management.Automation.PSObject
        Sort-Object returns the sorted objects.


NOTAS


        Sort-Object * sorts objects based on the properties that you specify or the default sort properties for objects of that type.

        * If an object does not have one of the specified properties, the property value for that object is interpreted by the cmdlet as Null and is
        placed at the end of the sort order. When sorting objects, Sort-Object uses the Compare method for each property. If a property does not
        implement IComparable, the cmdlet converts the property value to a string and uses the Compare method for System.String *. The Sort-Object *
        cmdlet sorts objects in ascending or descending order based on the values of properties of the object. If you sort on a property whose value
        is an enumeration, Sort-Object * sorts the enumeration values in numeric order; it does not sort the enumeration member names. For example,
        if you sort services by status, services with a status of Stopped appear before services with a status of Running, because the value of
        Status is a ServiceControllerStatushttps://msdn.microsoft.com/en-us/library/system.serviceprocess.servicecontrollerstatus(v=vs.110).aspx
        enumeration, in which Stopped has a value of 1 and Running has a value of 4.

    Example 1: Sort the current directory by name

    PS C:\>Get-ChildItem | Sort-Object
    Mode                LastWriteTime     Length Name
    ----                -------------     ------ ----
    -a---         9/13/2005   4:24 PM          0 0
    -a---          9/6/2005   4:19 PM         12 a.csv
    -a---         9/21/2005   3:49 PM        529 a.Ps
    -a---         8/22/2005   4:14 PM         22 a.pl
    -a---         9/27/2005  10:33 AM         24 a.txt
    -a---         9/15/2005  10:31 AM        398 a.vbs
    -a---         7/21/2005  12:39 PM      37066 a.xml
    -a---         8/28/2005  11:30 PM       5412 a.xslt
    -a---        10/25/2005   1:59 PM        125 AdamTravel.txt
    -a---         7/21/2005   9:49 AM         59 add2Num.Ps
    -a---         8/29/2005   5:42 PM       7111 add-content.xml
    -a---         9/21/2005  12:46 PM       8771 aliens.Ps
    -a---         8/10/2005   2:10 PM        798 array.xml
    -a---          8/4/2004   5:00 AM        110 AUTORUN.INF
    -a---          9/6/2005   4:20 PM        245 b.csv
    ...

    This command sorts the subdirectories and files in the current directory. Because no properties are specified, the files and directories are
    sorted in ascending alphabetical order by their default sort property, Name.
    Example 2: Sort the current directory by file length

    PS C:\>Get-ChildItem | Sort-Object -Property length
    Mode                LastWriteTime     Length Name
    ----                -------------     ------ ----
    -a---         12/3/2006   5:35 PM          2 pref.txt
    -a---          9/6/2006   3:33 PM         15 count.txt
    -a---         7/26/2006  10:01 AM         30 filenoext
    -a---         8/18/2006   9:02 AM         52 temp.ps1
    -a---         8/18/2006   9:02 AM         52 temp.msh
    -a---          9/6/2006   3:33 PM         56 fivewords.txt
    -a---         7/26/2006   9:28 AM         80 date.csv
    -a---         7/29/2006   7:15 PM         84 test2.txt
    -a---         7/29/2006   7:15 PM         84 test.ps1

    This command displays the files in the current directory in ascending order by file length.
    Example 3: Sort processes by memory use

    PS C:\>Get-Process | Sort-Object -Property WS | Select-Object -Last 5
    Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName
    -------  ------    -----      ----- -----   ------     -- -----------
    1105      25    44236      18932   197    93.81      2032 iexplore
    2526      66    37668      36836   221   393.27       868 svchost
    974       19    22844      45928   371    88.39      3952 WINWORD
    1371      22    42192      61872   323    75.75      1584 INFOPATH
    2145      58    93088      70680   619   396.69      3908 OUTLOOK

    This command displays the five processes on the computer with the greatest memory use based on the size of their working sets.

    The command uses the Get-Process cmdlet to get a list of processes. It uses a pipeline operator (|) to send the results to the Sort-Object
    cmdlet, which sorts the objects in working-set order.

    Another pipeline operator sends the results to the Select-Object, which displays only the last five items in the list.
    Example 4: Sort HistoryInfo objects by ID

    PS C:\>Get-History | Sort-Object -Descending
    Id CommandLine
    -- -----------
    51 get-history | sort -descending
    50 get-history | sort -descending
    49 get-history | sort -descending
    48 get-history | sort -descending
    47 get-history | sort -descending
    46 get-history | sort -descending
    45 get-history | sort -descending
    44 cd $pshome
    43 Get-ChildItem | Sort-Object
    42 gci *.txt

    This command sorts HistoryInfo objects using the Id property as the default key.
    Example 5: Sort services by Status and DisplayName

    PS C:\>Get-Service | Sort-Object -Property @{Expression = "Status"; Descending = $True}, @{Expression = "DisplayName"; Descending = $False}
    Status   Name               DisplayName
    ------   ----               -----------
    Running  ALG                Application Layer Gateway Service
    Running  Ati HotKey Poller  Ati HotKey Poller
    Running  wuauserv           Automatic Updates
    Running  BITS               Background Intelligent Transfer Ser...
    Running  Client for NFS     Client for NFS
    ...
    Stopped  clr_optimizatio... .NET Runtime Optimization Service v...
    Stopped  Alerter            Alerter
    Stopped  AppMgmt            Application Management
    Stopped  aspnet_state       ASP.NET State Service
    Stopped  ATI Smart          ATI Smart
    Stopped  ClipSrv            ClipBook

    This command displays the services on the computer in descending Status order and ascending DisplayName order.

    The command uses the Get-Service cmdlet to get the services on the computer. It uses a pipeline operator (|) to send services to the Sort-Object
    cmdlet.

    To sort one property in ascending order and another property in descending order, the command uses a hash table for the value of the Property
    parameter. The hash table uses an Expression key to specify the property name and an Ascending or Descending key to specify the sort order.

    The resulting display, which sorts the Status values in descending order, lists properties with a Status value of Running before those with a
    Status value of Stopped. When sorted in ascending order, Stopped appears before Running, because Status is an enumerated property in which the
    value of Stopped (1) is less than the value of Running (4).
    Example 6: Sort text files by time span

    PS C:\>Get-ChildItem *.txt | Sort-Object -Property @{Expression={$_.LastWriteTime - $_.CreationTime}; Ascending = $False} | Format-Table
    LastWriteTime, CreationTime
    LastWriteTime                           CreationTime
    -------------                           ------------
    2/21/2006 10:22:20 AM                   10/3/2005 4:19:40 PM
    2/27/2006 8:14:24 AM                    2/23/2006 10:41:08 PM
    2/24/2006 1:26:19 PM                    2/23/2006 11:23:36 PM
    1/5/2006 12:01:35 PM                    1/5/2006 11:35:30 AM
    2/24/2006 9:25:40 AM                    2/24/2006 9:22:24 AM
    2/24/2006 9:40:01 AM                    2/24/2006 9:39:41 AM
    2/21/2006 10:21:30 AM                   2/21/2006 10:21:30 AM

    This command sorts text files in descending order by the time span between CreationTime and LastWriteTime.
    Example 7: Sort names in a text file

    PS C:\>Get-Content servers.txt
    localhost
    test01
    server01
    server02
    localhost
    server01 PS C:\>Get-Content servers.txt | Sort-Object -Unique
    localhost
    server01
    server02
    test01

    These commands sort the names of servers in a text file. The second command uses the Sort-Object cmdlet with the Unique parameter to return a
    sorted list without duplicates.

VÍNCULOS RELACIONADOS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821863
    Compare-Object
    Group-Object
    Measure-Object
    New-Object
    Select-Object
    Tee-Object



PS C:\Users\Usuario\nuevodir> Get-Process | Sort-Object -Property id -Descending false
>> ErrorTerminación(Sort-Object): "No se encuentra ningún parámetro de posición que acepte el argumento 'false'."
Sort-Object : No se encuentra ningún parámetro de posición que acepte el argumento 'false'.
En línea: 1 Carácter: 15
+ Get-Process | Sort-Object -Property id -Descending false
+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Sort-Object], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.SortObjectCommand
Sort-Object : No se encuentra ningún parámetro de posición que acepte el argumento 'false'.
En línea: 1 Carácter: 15
+ Get-Process | Sort-Object -Property id -Descending false
+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Sort-Object], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.SortObjectCommand

PS C:\Users\Usuario\nuevodir> Get-Process | Sort-Object -Property id -Descending

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
    173       6     1508       6436       0,06   7996   1 chrome
    248       8     2084       5564       0,17   7864   1 notepad
    622      22    30720       7476       1,06   7756   1 OneDrive
    660      14    60132       6316       0,34   7736   1 Microsoft.Photos
    195       6     4532       2492              7248   0 NisSrv
    117       4     1660       5976              6988   0 svchost
    143       4     1456          4       0,05   6692   1 SkypeBackgroundHost
    383      19    43416     176216      10,13   6660   1 chrome
    369      10     5856       1344       0,20   6552   1 YourPhone
    831      16    10160        820       0,28   6516   1 WindowsInternal.ComposableShell.Experiences.TextInput.InputApp
    411       9     3492       6900              6260   0 SecurityHealthService
    372      13     8604       7896      19,95   6220   1 vmtoolsd
    151       5     1288       2220       0,08   6204   1 SecurityHealthSystray
    138       5     1552       2780       0,05   5992   1 RuntimeBroker
    257       8     2428       7608       0,75   5972   1 RuntimeBroker
   1384      46    80876      46876      14,06   5940   1 SearchUI
    692      24    19652      17856              5900   0 SearchIndexer
    868      20    16544        592       0,92   5788   1 ShellExperienceHost
    148       6     1476       6972       0,03   5340   1 chrome
    961      36   176276     152488     148,14   5308   1 powershell_ise
    247       7     2056       8308       0,09   5108   1 svchost
    223       9     1728       3000              5028   0 svchost
    588      14     9160      16564       4,09   4764   1 RuntimeBroker
    257       7     1932      10896       0,06   4608   1 RuntimeBroker
    308       9     3388       6784       0,61   4476   1 RuntimeBroker
    240       7     2140       4884       1,45   4356   1 RuntimeBroker
   1152      40   100936       1284      19,61   4340   1 SkypeApp
    490      13     7140       2296       1,66   4176   1 LockApp
   1057      29    40716      79208      13,94   4164   1 chrome
    394      12     7408       6672       0,20   4104   1 smartscreen
    236       8     2500       6088       0,88   4040   1 TPAutoConnect
   2239      49    54308      63248      28,84   3996   1 explorer
    421       9     3848       5776       2,44   3848   1 ctfmon
    320      18     5668      10508       0,59   3584   1 taskhostw
    858      21     9564      15704       2,52   3504   1 svchost
    364      10    11004      11320              3460   0 WmiPrvSE
    547      10     4784      13244      10,78   3352   1 sihost
    217       7     1784       4524              3184   0 svchost
    241       8     3100       2760       0,19   3132   1 ApplicationFrameHost
    219       7     2484       1052              3120   0 msdtc
    212       7     1432       2284              2844   0 svchost
   1110      37   138120      40616              2840   0 MsMpEng
    251       8     2756       3552              2664   0 dllhost
    227       7     2020       2488              2620   0 TPAutoConnSvc
    119       4     5436        432       0,02   2556   1 conhost
    233       9     2888       6076       0,27   2412   1 dllhost
    317      13     4732       7576              2108   0 vmtoolsd
    779      12    11692      16360              2100   0 svchost
    372      13     6648       7184       2,77   2088   1 taskhostw
    176       7     3688       1128              2080   0 VGAuthService
    544      18     8264       5532              1952   0 spoolsv
    130       6     1168       2004              1832   0 svchost
    335       8     1776       3112              1824   0 svchost
    319       7     2132       7024              1744   0 svchost
    698      68     9128      10332              1632   0 svchost
      0       0      568      63756              1564   0 Memory Compression
    410      10    11552       9200              1476   0 svchost
   1177      28    10724      10868              1400   0 svchost
    123       4     1220        528              1332   0 vmacthlp
    227       7     1848       3040              1196   0 svchost
    680      12    13076      14528              1096   0 svchost
    650      18    33416      30168              1064   0 svchost
   2343      45   176824      33280              1020   0 svchost
    829      33    54152      54688               944   1 dwm
    929      10     4740       7568               868   0 svchost
     49       4     1212        192               776   0 fontdrvhost
     49       8     5712       2832               768   1 fontdrvhost
    956      13     6996      13848               744   0 svchost
   1163      13     4732       8492               648   0 lsass
    349       6     2844       3652               628   0 services
    264       8     3464       8092       0,23    564   1 RuntimeBroker
    268       7     2172       2404               552   1 winlogon
    166       6     1004        424               496   0 wininit
    376      13     1276       1632               488   1 csrss
    469      16    17688      41112       8,39    428   1 chrome
    331       7     1152       1228               408   0 csrss
    183       6     4176       9536               324   0 svchost
     53       2      316        104               280   0 smss
    413      25     6676       7788               256   0 svchost
      0       4      996      17620                88   0 Registry
   2318       0       60          8                 4   0 System
      0       0       40          4                 0   0 Idle


PS C:\Users\Usuario\nuevodir> Stop-Transcript
**********************
Fin de la transcripción de Windows PowerShell
Hora de finalización: 20190206085812
**********************
